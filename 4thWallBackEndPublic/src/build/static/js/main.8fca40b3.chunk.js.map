{"version":3,"sources":["components/utilcomponents/LinkButton.js","components/SearchComponent.js","utils/AuthContext.js","components/PayPalButton.js","pages/data/changelog.js","pages/HomePage.js","pages/AddCompany.js","components/CompanyList.js","pages/CompanyListPage.js","utils/MessageContext.js","components/AddReview.js","components/UserFunctions.js","pages/AddReviewPage.js","components/CompanyDetail.js","components/ReviewsList.js","pages/CompanyDetailPage.js","pages/NotFoundPage.js","components/Register.js","pages/UserCreate.js","components/Login.js","pages/LoginUser.js","NavBar.js","components/ReviewDetail.js","pages/DetailReviewPage.js","utils/ReviewContext.js","components/ReviewEdit.js","pages/EditReviewPage.js","components/utilcomponents/ReviewTable.js","components/Profile.js","pages/ProfilePage.js","components/Reset.js","pages/ResetPage.js","components/ResetForm.js","pages/ResetViaEmailPage.js","components/ReviewDelete.js","pages/DeleteReviewPage.js","components/admin/reviews.js","components/admin/companies.js","components/admin/reviewedit.js","components/admin/companyedit.js","components/admin/companycreate.js","dataprovider/dataprovider.js","pages/AdminPage.js","components/AddRepResponse.js","pages/RepPage.js","pages/ForCompanypage.js","components/utilcomponents/FlashMessage.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","history","to","location","match","staticContext","onClick","rest","event","push","SearchComponent","companies","console","log","useState","query","setQuery","searchResults","setSearchResults","onlyReviewed","setOnlyReviewed","useEffect","data","results","filter","company","companyName","toLowerCase","includes","reviewedCompanies","num_of_reviews","Container","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Check","id","label","map","key","Card","className","Body","Title","Badge","variant","Text","company_id","Alert","href","AuthContext","React","createContext","AuthContextProvider","state","setState","Provider","children","PayPalButton","action","method","name","src","border","title","alt","width","height","changelog","date","note","HomePage","setReviewsInfo","companiesInfo","setCompaniesInfo","useContext","setTotalReviews","a","async","fetch","reviews","json","bodyReviews","bodyCompanies","total","fetchData","Fragment","Jumbotron","fluid","loggedIn","Row","Col","sm","item","Link","AddCompany","CompanyList","reduce","r","group","toUpperCase","result","Object","values","class","section","child","CompanyListPage","response","MessageContext","MessageProvider","show","message","setMessage","AddReview","setReviewInfo","theaterId","useForm","register","handleSubmit","MYSQLDate","moment","format","setcompanyid","role","setrole","profRating","setprofRating","worthWhileRating","setworthWhileRating","rateofPay","setrateOfPay","comment","setComment","isAdded","setIsAdded","review","setReview","responseAns","setResponseAns","errors","setErrors","givenCompany","find","review_id","status","alert","onSubmit","reqBody","user_id","axios","post","qs","stringify","headers","then","res","catch","err","addReview","options","defaultValue","ref","required","for","OverlayTrigger","placement","delay","hide","overlay","Tooltip","pill","Button","AddReviewPage","reviewInfo","params","x","CompanyDetail","profrating","parseFloat","avgProfRating","worthwhilerating","avgWorthWhileRating","companyDetails","ReviewsList","setShow","activeReview","setActiveReview","changeShow","Accordion","defaultActiveKey","Toggle","as","Header","eventKey","Collapse","lg","Footer","Modal","onHide","closeButton","CompanyDetailPage","reviewsInfo","companyres","bodyCompRes","NotFoundPage","Register","email","setEmail","password","setPassword","isRegistered","setIsRegistered","newUser","registerUser","UserCreate","Login","user","localStorage","setItem","loginUser","token","getItem","decoded","jwt_decode","LoginUser","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","removeItem","ReviewDetail","style","DetailReviewPage","body","ReviewContext","ReviewProvider","ReviewEdit","edited","setEdited","numbers","ROLES","givenRoleValue","indexOf","profNumbers","number","inline","defaultChecked","worthWhileNumbers","isNaN","put","editReview","parseInt","Spinner","animation","EditReviewPage","isLoaded","setIsLoaded","ReviewTable","setReviews","URL","get","getReviews","Table","striped","bordered","hover","size","Profile","sitepermissions","ProfilePage","Reset","setMsgFromServer","isSubmit","setIsSubmit","error","Fade","in","ResetPage","ResetForm","isUpdate","setIsUpdate","isLoading","setIsLoading","setError","resetPasswordToken","ResetEmailPage","isDeleted","setIsDeleted","delete","deleteReview","ReviewDelete","ReviewList","List","sort","field","order","Datagrid","rowClick","TextField","source","EditButton","NumberField","Edit","SimpleForm","ReferenceInput","reference","SelectInput","optionText","TextInput","NumberInput","CompanyEdit","CompanyCreate","Create","multiline","apiUrl","httpClient","fetchUtils","fetchJson","create","resource","API","dataValues","getList","pagination","page","perPage","JSON","range","url","fetchedData","content","getMany","company_ids","getOne","update","params_id","config","deleteMany","ids","AdminPage","dataProvider","dataprovider","Admin","Resource","list","edit","AddRepResponse","addRepResponse","RepPage","ForCompany","isSent","setIsSent","md","ClassName","submission","submitSubmission","FlashMessage","showTimer","setTimeout","clearTimeout","Heading","App","path","component","Homepage","exact","DeleteReview","ResetfromEmail","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fca40b3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withRouter} from 'react-router'\r\n\r\nconst LinkButton =(props) => {\r\n  const{\r\n    history,\r\n    location,\r\n    match,\r\n    staticContext,\r\n    to,\r\n    onClick,\r\n    ...rest\r\n  }=props\r\n\r\n  return(\r\n    <button\r\n      {...rest}\r\n      onClick={(event) =>{\r\n        onClick && onClick(event)\r\n        history.push(to)\r\n      }}\r\n\r\n      />\r\n  )\r\n}\r\nLinkButton.propTypes ={\r\n  to: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired\r\n}\r\nexport default withRouter(LinkButton)","import React,{useState,useEffect} from 'react'\r\nimport {Form,Container,Card,Alert,Badge} from 'react-bootstrap'\r\nimport LinkButton from './utilcomponents/LinkButton'\r\n\r\n\r\nconst SearchComponent= ({companies}) => {\r\n  console.log(\"Here are the companies: \",companies)\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchResults,setSearchResults]= useState(companies)\r\n  const [onlyReviewed,setOnlyReviewed]=useState(false)\r\n  //Change Handler\r\n  const handleChange = e => {\r\n    setQuery(e.target.value)\r\n    }\r\n  \r\n    const onlyReviewedHandler = e =>{\r\n      setOnlyReviewed(!onlyReviewed)\r\n    }\r\n  \r\n  \r\n  \r\n//when change happens\r\n  useEffect(() => {\r\n    console.log(companies)\r\n    if(query===\"\"){\r\n      setSearchResults(companies.data)\r\n    }\r\n    const results = companies.filter(company =>\r\n      company.companyName.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setSearchResults(results);\r\n    //only show reviewed companies\r\n    if (onlyReviewed){\r\n      const reviewedCompanies = companies.filter(company =>\r\n        company.num_of_reviews != 0)\r\n        setSearchResults(reviewedCompanies)\r\n    }\r\n  }, [query,companies,onlyReviewed]);\r\n\r\n   \r\n    return (\r\n    <>\r\n      <Container>\r\n        <Form>\r\n          <Form.Group controlId=\"SearchBar\">\r\n            <Form.Label>\r\n              <h5>What company are you looking for reviews for?</h5>\r\n            </Form.Label>\r\n              <Form.Control \r\n              type=\"input\"\r\n              placeholder=\"Search for...\"\r\n              value ={query}\r\n              onChange={handleChange}\r\n              />\r\n              <Form.Check\r\n                type='checkbox'\r\n                id='showReviewedchkbox'\r\n                label='Only show companies with reviews'\r\n                onChange={onlyReviewedHandler}\r\n                />\r\n            \r\n          </Form.Group>\r\n        </Form>\r\n          {\r\n            searchResults.map((company,key) =>\r\n            \r\n            <Card \r\n            className=\"card mt-3\"\r\n            key={key}>\r\n              <Card.Body>\r\n                <Card.Title className=\"d-flex justify-content-center\">\r\n                    <h3>{company.companyName}</h3> <h5><Badge className=\"ml-2\"variant=\"info\">Reviews: {company.num_of_reviews}</Badge></h5> \r\n                </Card.Title>\r\n                <Card.Text className=\"d-flex justify-content-center\">\r\n                <LinkButton  id={company.company_id} className=\"btn btn-primary\" to={`/companies/${company.company_id}`}>See reviews</LinkButton>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card> \r\n            )}\r\n            \r\n        \r\n      </Container>\r\n        \r\n    \r\n    {query  && \r\n    <Container>\r\n    <Alert variant=\"primary\">Can't find what you are looking for? <a href=\"mailto:zdenardi@gmail.com?subject=Add Company Request\">Email me if you think I'm missing a company.</a></Alert>\r\n    </Container>\r\n    }\r\n    \r\n    </>\r\n\r\n\r\n  )}\r\n\r\n\r\nexport default SearchComponent","import React,{useState} from 'react'\r\n\r\n\r\n//creating context\r\nconst AuthContext = React.createContext([{}\r\n,()=>{}]);\r\n\r\nconst AuthContextProvider = (props)=>{\r\n  //Creating state object that will have multiple objects\r\n  const [state,setState] = useState({});\r\n\r\n \r\n  return(\r\n    <AuthContext.Provider value={[state,setState]}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\nexport {AuthContext,AuthContextProvider}","import React from 'react'\r\n\r\nconst PayPalButton = () => {\r\n\r\n  return(\r\n    <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\r\n    <input type=\"hidden\" name=\"cmd\" value=\"_donations\" />\r\n    <input type=\"hidden\" name=\"business\" value=\"PDAHCP33RKAHL\" />\r\n    <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\r\n    <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\r\n    <img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default PayPalButton","const changelog = [\r\n  {\r\n    date:\"3/31/2020\",\r\n    note: \"Theater Representative Program testing\"\r\n  },\r\n  {\r\n    date:\"3/31/2020\",\r\n    note:\"Ability to sort by review only\"\r\n  },\r\n  {\r\n    date:\"3/31/2020\",\r\n    note:\"Backend Rebuild and Quality of Life updates\"\r\n  }\r\n];\r\n\r\nexport default changelog","import React,{useEffect,useState,useContext} from 'react';\r\nimport reviewsdata from './data/reviews-content'\r\nimport ListCompanies from '../components/SearchComponent'\r\nimport {Container,Jumbotron,Row,Col,Alert} from 'react-bootstrap'\r\nimport Button from '../components/utilcomponents/LinkButton'\r\nimport {AuthContext} from '../utils/AuthContext'\r\nimport PayPalButton from '../components/PayPalButton'\r\nimport changelog from './data/changelog'\r\n\r\n\r\nconst HomePage =() => {\r\n  const [reviewsInfo,setReviewsInfo] =useState([]);\r\n  const [companiesInfo,setCompaniesInfo] = useState([]);\r\n  const [state,setState]=useContext(AuthContext)\r\n  const [totalReviews,setTotalReviews]=useState();\r\n  console.log(changelog)\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n        const reviews = await fetch(`/api/reviews/`)\r\n        const bodyReviews = await reviews.json();\r\n        const companies = await fetch('/api/companies');\r\n        const bodyCompanies = await companies.json();\r\n        \r\n            \r\n        setReviewsInfo(bodyReviews.data)\r\n        setCompaniesInfo(bodyCompanies.data)\r\n        setTotalReviews(bodyReviews.total)\r\n        \r\n    }\r\n    fetchData()\r\n  },[])\r\n  const companies = companiesInfo\r\n  return(\r\n\r\n  <React.Fragment>\r\n  <style type=\"text/css\">\r\n    {`#homePageJumbo{\r\n      background-color: rgba(0, 0, 255, 0.1); \r\n    }`}>\r\n  </style>\r\n  <Jumbotron fluid id=\"homePageJumbo\" className=\"mt-4\">\r\n      <Container>\r\n        <h1 className=\"pb-1 display-4\">FourthWall</h1>\r\n          <p className=\"font-italic\">\r\n          “If you don’t value your time, neither will others. Stop giving away your time and talents. Value what you know and start charging for it.” – Kim Garst\r\n          </p>\r\n\r\n\r\n      </Container>\r\n  </Jumbotron>\r\n\r\n\r\n  \r\n\r\n    {state.loggedIn ? \r\n    <Container className=\"text-center border-bottom p-5\">\r\n    <h3 className=\"text-center mb-4\">Welcome Back!</h3>\r\n      <Row className=\"h-50 align-items-center\">\r\n        <Col sm>\r\n          <Container className=\"border h-100 mb-2\">\r\n          <h4>App News</h4>\r\n            {changelog.map((item,key) =>(\r\n              <ul key={key}>\r\n              <li className=\"font-weight-bold\">{item.date}</li>\r\n              <p>{item.note}</p>\r\n              </ul>\r\n            ))}\r\n          \r\n\r\n          </Container>\r\n        \r\n        </Col>\r\n        <Col sm>\r\n          <Container className=\"align-items-center h-100\">\r\n            <Button className=\"btn btn-primary mx-auto\" to=\"/addreview\">Add a Review</Button>\r\n            <Button className=\"btn btn-primary ml-2\" to=\"/profile\">View Your Profile</Button>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>    \r\n    :\r\n    <Container className=\"text-center border-bottom\">\r\n    <h3 className=\"text-center pb-2\">Login to start sharing your experiences.</h3>\r\n    <Button className=\"btn btn-primary mb-4\" to=\"/login\">Login</Button>\r\n    <Alert variant='light'>\r\n    Are you a company and want to know what you can do? \r\n      <Alert.Link href=\"/forcompanies\"> Click here!</Alert.Link> \r\n    </Alert>\r\n\r\n    </Container>\r\n    }\r\n    <Container className=\"pt-2\">\r\n      <Row>\r\n        <Col>\r\n          <PayPalButton/>\r\n        </Col>\r\n        <Col>\r\n          <p className=\"font-italic\">If you found this website helpful, feel free to 'e-gift' a cup of coffee!</p>\r\n        </Col>\r\n      </Row>\r\n      \r\n    </Container>\r\n  \r\n  \r\n  <Container className=\"pt-5\">\r\n    <ListCompanies companies={companies}/>  \r\n  </Container>\r\n  \r\n\r\n  \r\n  </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react';\r\n\r\nconst AddCompany =() => (\r\n  <React.Fragment>\r\n  <h1> This is to add a company</h1>\r\n\r\n  </React.Fragment>\r\n\r\n)\r\nexport default AddCompany","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst CompanyList = ({companies}) => {\r\n\r\nlet data = companies.reduce((r,e)=>{\r\n  //Make groups for each first letter of CompanyName\r\n  let group = e.companyName[0];\r\n  group = group.toUpperCase()\r\n  //if group doesn't exist, add it.\r\n  if(!r[group]) r[group] = {group, children:[e]}\r\n  else r[group].children.push(e)\r\n  //return reducer\r\n  return r;\r\n},{})\r\nlet result = Object.values(data)\r\n\r\n\r\n//Todo - Get Company ID\r\n\r\n  return(\r\n    <>\r\n   \r\n    <div class=\"container text-center\">\r\n    {/* Map Letter Groups*/}\r\n      {result.map((section,key)=>\r\n      <ul key={key}>\r\n        <li><span class=\"font-weight-bold\">{section.group}</span></li>\r\n        {/* Map Company Names */}\r\n        {(section.children).map((child,key) =>\r\n        <Link key={child.company_id} to={`/companies/${child.company_id}`}>{child.companyName}\r\n        <br/>\r\n        </Link>\r\n\r\n        )}\r\n          \r\n      </ul>)}\r\n    </div>\r\n    </>\r\n  )\r\n\r\n}\r\nexport default CompanyList","import React,{useState,useEffect} from 'react';\r\nimport CompanyList from '../components/CompanyList'\r\n\r\nconst CompanyListPage =() => {\r\n  const [companiesInfo, setCompaniesInfo] = useState([])\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {        \r\n        const response = await fetch('/api/companies');\r\n        const bodyCompanies = await response.json();\r\n        setCompaniesInfo(bodyCompanies.data)\r\n    }\r\n    fetchData()\r\n  },[])\r\n  const companies = companiesInfo\r\n  console.log(companiesInfo)\r\n\r\n  return(\r\n    <React.Fragment>\r\n    <CompanyList companies = {companies}/>\r\n\r\n\r\n    </React.Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default CompanyListPage","import React,{useState} from 'react'\r\n\r\nconst MessageContext = React.createContext([{}, () => {}]);\r\n\r\nconst MessageProvider = (props) =>{\r\n  const [message, setMessage] = useState({show:false});\r\n  return(\r\n    <MessageContext.Provider value ={[message,setMessage]}>\r\n      {props.children}\r\n    </MessageContext.Provider>\r\n  );\r\n}\r\n\r\nexport {MessageContext,MessageProvider}","import React,{useState,useContext,useEffect} from 'react'\r\nimport useForm from 'react-hook-form'\r\nimport moment from 'moment';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../utils/AuthContext';\r\nimport {MessageContext} from '../utils/MessageContext';\r\nimport {addReview} from './UserFunctions'\r\nimport {Container,Form,OverlayTrigger,\r\n  Tooltip,Badge,Button,Alert,Spinner} from 'react-bootstrap'\r\nimport Select from 'react-select'\r\n\r\n  const AddReview = ({setReviewInfo,companies,theaterId}) => {\r\n\r\n    const {register, handleSubmit} = useForm();\r\n    let m = moment();\r\n    const MYSQLDate = m.format('YYYY-MM-DD HH:mm:ss');\r\n    const [company_id, setcompanyid] = useState(theaterId)\r\n    const date = MYSQLDate\r\n    const [role, setrole] = useState(\"\")\r\n    const [profRating, setprofRating] = useState('')\r\n    const [worthWhileRating, setworthWhileRating] = useState(null)\r\n    const [rateofPay, setrateOfPay] = useState(null)\r\n    const [comment, setComment] = useState(null)\r\n    const [isAdded, setIsAdded]= useState(false);\r\n    const [review, setReview]=useState({})\r\n    const [state,setState]=useContext(AuthContext)\r\n    const [message,setMessage] = useContext(MessageContext)\r\n    const [responseAns,setResponseAns] = useState(false)\r\n    const [errors,setErrors]=useState(false);\r\n\r\nfunction worthWhileToolTip(props){\r\n  return <Tooltip {...props}>Was this job worth it to you artistically/financially</Tooltip>\r\n}\r\n\r\n\r\nfunction responseAnsToolTip(props){\r\n  return <Tooltip {...props}>A Representative of the Theater would be answer publically about this review. They would not be able ot see your email or be able to personally contact you in anyway.</Tooltip>\r\n}\r\n    \r\n const reviewHandler=() => {\r\n   \r\n    const review ={\r\n      user_id:state.id,\r\n      company_id:company_id,\r\n      date:date,\r\n      role:role,\r\n      profRating:profRating,\r\n      worthWhileRating:worthWhileRating,\r\n      rateofPay:rateofPay,\r\n      comment:comment,\r\n      responseAns: responseAns\r\n    }\r\n    addReview(review).then(res => {\r\n      if(res ===\"There was a problem\"){ \r\n        setErrors(\"Hmm...you want to try that again?\")\r\n     }else{\r\n      setMessage(message => ({ ...message, alert: 'Review Added!',type:\"success\" }))\r\n      setReview(res.data)\r\n      setIsAdded(true)\r\n    }\r\n      \r\n      \r\n    })  \r\n\r\n  }\r\n\r\n    let givenCompany =  (companies.find(company=>company.company_id == theaterId)) \r\n  \r\n  \r\n  \r\n   \r\n\r\n                     \r\n  if (isAdded !== false){\r\n    \r\n    return(\r\n      <Redirect to ={`/review/${review.review_id}`}></Redirect>\r\n    )\r\n  }else if(\r\n    state.status === \"rep\"){\r\n      setMessage(message => ({ ...message, alert: `You are unable to create reviews as a Representative`,type:\"warning\" }))    \r\n    return(\r\n      <Redirect to = \"/login\"/>\r\n    )\r\n  }else{  \r\n  return(\r\n     \r\n      <React.Fragment>\r\n      {(!state.loggedIn ? <Redirect to = \"/login\"/> :null)}\r\n        <Container className=\"text-center\">\r\n          <Form onSubmit={handleSubmit(reviewHandler)} className=\"form-horizontal\">\r\n              <fieldset>\r\n                {/* <!-- Form Name --> */}\r\n                \r\n                <legend>Add Review</legend>\r\n\r\n              {/* <!-- Select Basic --> */}\r\n                {!theaterId && \r\n                \r\n              <div className=\"form-group\">\r\n                <label className=\"col-md-4 control-label\">Company</label>\r\n                <div className=\"col-md-4 mx-auto\">\r\n                \r\n                <Select options={(companies ? companies : [])\r\n                  .map((company,key)=>({\r\n                    value:company.company_id,\r\n                    label:company.companyName,\r\n                    key:key,\r\n                    })\r\n                  )}\r\n                  onChange={(event) => setcompanyid(event.value)}\r\n                  defaultValue={(givenCompany ? {value:0,label:\"yes\"} : {\r\n                    value:0,label:\"Select a company\"\r\n                   })}\r\n                 \r\n                />\r\n                  \r\n                </div>\r\n              </div>\r\n              }        \r\n              {/* <!-- Select Role --> */}\r\n              <div className=\"form-group\">\r\n                  <label className=\"col-md-4 control-label\">Role</label>\r\n                  <div className=\"col-md-4 mx-auto\">\r\n                    <select id=\"roleSelect\" name=\"RoleSelect\" className=\"form-control\" value={role} ref={register({required:true})} onChange={(event) => setrole(event.target.value)}>\r\n                      <option value = \"\">How did you work for them?</option>\r\n                      <option value={0}>Actor</option>\r\n                      <option value={1}>Designer</option>\r\n                      <option value={2}>Director</option>\r\n                      <option value={3}>Production</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              \r\n            \r\n              \r\n              {/* <!-- Professional Rating */}\r\n              <div className=\"form-group\">\r\n                <label className=\"col-md-4 control-label\" for=\"ratingProfessional\">Professionalism</label>\r\n                <div className=\"col-md-4 mx-auto\">\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingProfessional-0\">\r\n                    <input type=\"radio\" name=\"ratingProfessional\" id=\"ratingProfessional-0\" value=\"1\" onChange={(event) => setprofRating(event.target.value)} ref={register({required:true})} />\r\n                    1\r\n                  </label>\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingProfessional-1\">\r\n                    <input type=\"radio\" name=\"ratingProfessional\" id=\"ratingProfessional-1\" value=\"2\" onChange={(event) => setprofRating(event.target.value)} ref={register({required:true})} />\r\n                    2\r\n                  </label>\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingProfessional-2\">\r\n                    <input type=\"radio\" name=\"ratingProfessional\" id=\"ratingProfessional-2\" value=\"3\" onChange={(event) => setprofRating(event.target.value)} ref={register({required:true})} />\r\n                    3\r\n                  </label>\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingProfessional-3\">\r\n                    <input type=\"radio\" name=\"ratingProfessional\" id=\"ratingProfessional-3\" value=\"4\" onChange={(event) => setprofRating(event.target.value)} ref={register({required:true})} />\r\n                    4\r\n                  </label>\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingProfessional-4\">\r\n                    <input type=\"radio\" name=\"ratingProfessional\" id=\"ratingProfessional-4\" value=\"5\" onChange={(event) => setprofRating(event.target.value)} ref={register({required:true})} />\r\n                    5\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* <!-- WorthWhile --> */}\r\n              <div className=\"form-group\">\r\n                \r\n                <OverlayTrigger\r\n                  placement=\"center\"\r\n                  delay={{ show: 250, hide: 400 }}\r\n                  overlay={worthWhileToolTip}\r\n                >\r\n                <label className=\"col-md-4 control-label\" for=\"ratingWorth\">Worthwhile?\r\n                <Badge className=\"p3\" pill variant=\"info\">?</Badge>\r\n                </label>\r\n                </OverlayTrigger>\r\n                <div className=\"col-md-4 mx-auto\">\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingWorth-0\">\r\n                    <input type=\"radio\" name=\"ratingWorth\" id=\"ratingWorth-0\" value=\"1\" onChange={(event) => setworthWhileRating(event.target.value)} ref={register}/>\r\n                    1\r\n                  </label>\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingWorth-1\">\r\n                    <input type=\"radio\" name=\"ratingWorth\" id=\"ratingWorth-1\" value=\"2\" onChange={(event) => setworthWhileRating(event.target.value)}ref={register}/>\r\n                    2\r\n                  </label>\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingWorth-2\">\r\n                    <input type=\"radio\" name=\"ratingWorth\" id=\"ratingWorth-2\" value=\"3\" onChange={(event) => setworthWhileRating(event.target.value)}ref={register}/>\r\n                    3\r\n                  </label>\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingWorth-3\">\r\n                    <input type=\"radio\" name=\"ratingWorth\" id=\"ratingWorth-3\" value=\"4\" onChange={(event) => setworthWhileRating(event.target.value)} ref={register}/>\r\n                    4\r\n                  </label>\r\n                  <label className=\"checkbox-inline px-2\" for=\"ratingWorth-4\">\r\n                    <input type=\"radio\" name=\"ratingWorth\" id=\"ratingWorth-4\" value=\"5\" onChange={(event) => setworthWhileRating(event.target.value)} ref={register}/>\r\n                    5\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* <!-- Rate of Pay--> */}\r\n              <div className=\"form-group\">\r\n                <label className=\"col-md-4 control-label\" for=\"inputPay\">Rate of Pay</label>  \r\n                <div className=\"col-md-4 mx-auto\">\r\n                <input id=\"inputpay\" name=\"inputPay\" type=\"text\" placeholder=\"Example: $200 stipend\" className = \"form-control input-md\" value={rateofPay}onChange={(event)=>setrateOfPay(event.target.value)} ref={register}/>\r\n        \r\n                <span className=\"help-block\">Not required </span>  \r\n                </div>\r\n              </div>\r\n              \r\n              {/* <!-- Comments --> */}\r\n              <div className=\"form-group\">\r\n                <label className=\"col-md-4 control-label\" for=\"commentsText\">Comments:</label>\r\n                <div className=\"col-md-4 mx-auto\">                     \r\n                  <textarea className=\"form-control\" name=\"comment\" value={comment} onChange={(event)=>setComment(event.target.value)} ref={register({required:true})}> </textarea>\r\n                </div>\r\n              </div>\r\n              \r\n\r\n\r\n              {/* ResponseAns */}\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id=\"responseAns\"\r\n                label=\"Are you okay with a Representative from this theater publically respond to this review?\"\r\n                onChange={(event) => setResponseAns(!responseAns)}\r\n                />\r\n                <OverlayTrigger\r\n                  placement=\"center\"\r\n                  delay={{ show: 250, hide: 400 }}\r\n                  overlay={responseAnsToolTip}\r\n                >\r\n                <Badge className=\"p3\" pill variant=\"info\">?</Badge>\r\n                </OverlayTrigger>             \r\n              <Alert variant=\"light\">I made FourthWall to help Chicago Theater Artists share their experiences with all the local houses in Chicago without any worry about being blacklisted by anyone or any company. You have total anonymity. With that comes responsibility and I ask you to not to negatively “call out” a single individual by name or title.<br/> \r\n\r\n              For Example – If you had a problem with an Artistic Director at a company, instead of saying “The Artistic Director made me feel…” instead say “There were people in this company who made me feel…”.\r\n              </Alert>\r\n              <Form.Check\r\n                required\r\n                type=\"checkbox\"\r\n                id=\"agreementCheck\"\r\n                label=\"By checking this box, you agree to follow the rules of FourthWall described above\"\r\n                />\r\n\r\n\r\n\r\n              {/* <!-- Button --> */}\r\n              <div className=\"form-group\">\r\n                <label className=\"col-md-4 control-label\" for=\"btnSubmit\"></label>\r\n                <div className=\"col-md-4 mx-auto\">\r\n                <Button className=\"primary\"type = \"submit\">Submit</Button>\r\n                  {/* <button onClick={()=>addReview()}>Submit</button> */}\r\n                </div>\r\n                {errors &&\r\n                  <Alert variant=\"danger\">Hmm...there was a problem....Please refresh and try again</Alert>}\r\n            </div>     \r\n          </fieldset>\r\n        </Form>      \r\n      </Container>\r\n    </React.Fragment>\r\n     \r\n \r\n  )\r\n  }\r\n}\r\n\r\nexport default AddReview","import axios from 'axios';\r\nimport qs from 'querystring'\r\n\r\n\r\nexport const registerUser = newUser =>{\r\n  \r\n  \r\n  const reqBody = {\r\n    email: `${newUser.email}`,\r\n    password: `${newUser.password}`\r\n  }\r\n  const config ={\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios\r\n  .post('/users/register',qs.stringify(reqBody),config)\r\n  .then(res => {\r\n    console.log(res)\r\n    console.log(\"Registered\")\r\n  })\r\n\r\n}\r\n\r\nexport const loginUser = user => {\r\n  const reqBody = {\r\n    email: `${user.email}`,\r\n    password: `${user.password}`\r\n    }\r\n    const config ={\r\n      headers:{\r\n        'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios\r\n  .post('users/login' ,qs.stringify(reqBody),config)\r\n  .then(res =>{\r\n    console.log(res)\r\n    if(res.data.message){\r\n      return (res)\r\n    }else {\r\n    localStorage.setItem('userToken', res.data)\r\n    return (res)}\r\n  })\r\n  .catch(err=> {\r\n    console.log(err)    \r\n    return(\"There was a problem\")\r\n    })\r\n}\r\nexport const addReview = review =>{\r\n  console.log(review);\r\n  const reqBody = {\r\n    review_id:review.review_id,\r\n    user_id: review.user_id,\r\n    company_id:review.company_id, \r\n    date: review.date,\r\n    role: review.role,\r\n    profRating: review.profRating, \r\n    worthWhileRating: review.worthWhileRating, \r\n    rateofPay: review.rateofPay,  \r\n    comment:review.comment,\r\n    responseAns:review.responseAns\r\n  }\r\n  const config ={\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios\r\n  .post('/api/reviews/',qs.stringify(reqBody),config)\r\n  .then(res => {\r\n    console.log(\"Trying to add review... \")\r\n    return(res)\r\n  })\r\n  .catch(err=> {\r\n    console.log(err)    \r\n    return(\"There was a problem\")\r\n    })\r\n\r\n}\r\n  \r\nexport const editReview = review =>{\r\n  //check to see if role is a number, find in array and get value and pass it.\r\n  console.log(review)\r\n  if (isNaN(review.role)){\r\n    const ROLES=[\"Actor\",\"Designer\",\"Director\",\"Production\"]\r\n    const givenRoleValue=ROLES.indexOf(review.role)\r\n    review.role=givenRoleValue\r\n  }\r\n\r\n  const reqBody = {\r\n    review_id:review.review_id,\r\n    company_id:review.company_id, \r\n    date: review.date,\r\n    role: review.role,\r\n    profRating: review.profRating, \r\n    worthWhileRating: review.worthWhileRating, \r\n    rateofPay: review.rateofPay,  \r\n    comment:review.comment,\r\n    responseAns:review.responseAns\r\n  }\r\n  const config ={\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios.put(`/api/reviews/review/${review.company_id}`,qs.stringify(reqBody),config)\r\n  .then(res => {\r\n    console.log(res)\r\n    return(res.data)\r\n  });\r\n}\r\n\r\nexport const deleteReview = review =>{\r\n  console.log(review);\r\n  const reqBody = {\r\n    user_id: review.user_id,\r\n    review_id: review.review_id\r\n  }\r\n  const config ={\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios\r\n  .delete(`/api/reviews/review/${review.review_id}`,qs.stringify(reqBody),config)\r\n  .then(res => {\r\n    console.log(res)\r\n    console.log(\"Review Delete\")\r\n    return(res.data)\r\n  })\r\n\r\n}\r\n\r\n//adding Rep Response\r\n\r\nexport const addRepResponse = review =>{\r\n  const reqBody = {\r\n    response:review.response,\r\n    review_id:review.review_id,\r\n  }\r\n  const config ={\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios\r\n  .put(`/api/reviews/test`,qs.stringify(reqBody),config)\r\n  .then(res => {\r\n    console.log(res)\r\n    return(res)\r\n  });\r\n}\r\n\r\nexport const submitSubmission = submission =>{\r\n\r\n  console.log(\"Here is the submission: \", submission)\r\n  const reqBody={\r\n    email: submission.email,\r\n    comment:submission.comment\r\n  }\r\n  const config = {\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios\r\n  .post(`/users/rep`, qs.stringify(reqBody),config)\r\n  .then(res=>{\r\n    console.log(res)\r\n    return(res)\r\n  }).catch(err=>{\r\n    console.log(err)\r\n    return(\"There was a problem\")\r\n  })\r\n}\r\n","import React,{useEffect, useState} from 'react';\r\nimport AddReview from '../components/AddReview'\r\n\r\nconst AddReviewPage =({match}) => {\r\n  const [reviewInfo, setReviewInfo] = useState();\r\n  const [companiesInfo,setCompaniesInfo] = useState([]);\r\n\r\n\r\n  const theaterId=match.params.theaterId\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {        \r\n        const companies = await fetch('/api/companies');\r\n        const bodyCompanies = await companies.json();    \r\n        setCompaniesInfo(bodyCompanies.data)\r\n\r\n    }\r\n    fetchData()\r\n\r\n\r\n  },[])\r\n  const companies = companiesInfo\r\n  const givenCompany = (companiesInfo.find(x=>x.company_id == theaterId))\r\n\r\n  return(\r\n    <React.Fragment>\r\n  \r\n    <AddReview setReviewInfo = {reviewInfo}  companies= {companies} theaterId={theaterId}/>\r\n\r\n    </React.Fragment>\r\n\r\n    )\r\n}\r\nexport default AddReviewPage","import React from 'react';\r\nimport LinkButton from './utilcomponents/LinkButton'\r\n\r\n\r\nconst CompanyDetail = ({company}) =>{\r\n\r\n  const profrating = parseFloat(company.avgProfRating)\r\n  const worthwhilerating = parseFloat(company.avgWorthWhileRating)\r\n  \r\n//Todo - Get Company ID and Info\r\nreturn(\r\n  <>\r\n  <div class=\"container p-2 border mt-2\">\r\n      <div class=\"row\">\r\n         \r\n          <div class=\" mx-2 col-sm\">\r\n        \r\n            <h2 >{company.companyName}</h2>\r\n              <p>{company.companyDetails ? company.companyDetails : \"No details listed. Email me if you have some!\"}</p>\r\n          </div>\r\n          <div class=\"col-sm text-center\">\r\n          {company.avgProfRating ? \r\n          /* If there are reviews.... */\r\n                                <h4 class=\"mt-2\"> Average Professional Rating - {profrating\r\n                                }/5</h4>\r\n                                :\r\n          /* If there are no reviews.... */\r\n                                <h4 class=\"mt-2\">Be the first to review!</h4>            \r\n          }\r\n          {company.avgWorthWhileRating &&\r\n          /* If there are reviews.... */\r\n                                <h4 class=\"mt-2\">Average WorthWhile Rating - {worthwhilerating}/5</h4>\r\n        \r\n          }         \r\n           \r\n          </div>\r\n      </div>\r\n      <div>\r\n      <LinkButton to={`/addreview/${company.company_id}`}class=\"btn btn-primary btn-lg btn-block\">Add Review</LinkButton>\r\n      </div>\r\n    </div>\r\n  \r\n  </>\r\n)\r\n\r\n}\r\nexport default CompanyDetail","import React, {useEffect,useState,useContext} from 'react';\r\n\r\nimport {Card,\r\n        Accordion,\r\n        Container,\r\n        Row,\r\n        Col,\r\n        Modal,\r\n        Button} from 'react-bootstrap'\r\n\r\n\r\nconst ReviewsList =({reviews}) => {\r\n\r\n  const [show,setShow] = useState(false);\r\n  const [activeReview, setActiveReview]=useState()\r\n\r\n  \r\n  const changeShow = (review) =>{\r\n    setActiveReview(review)\r\n    const showIs = !show\r\n    setShow(showIs)\r\n  }\r\n\r\n  \r\n\r\n  if(!reviews){\r\n    return(\r\n      <>\r\n      <Container>\r\n        <h5>There are no reviews, why don't you add one?</h5>\r\n      </Container>\r\n      </>\r\n    )\r\n  }else\r\n  return(\r\n      <>\r\n      <Container>\r\n      {reviews.map((review,key)=>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card className=\"card mt-5\" key = {key}>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n              <Card.Header>\r\n                <Row>\r\n                  <Container className=\"text-center\">\r\n                    <h5>{review.companyName}</h5>\r\n                    <h6>Pay: {review.rateofPay ? review.rateofPay : \"The user did not provide details on pay\"}</h6>\r\n                    <h6>Click to see full review</h6>\r\n                  </Container>\r\n                </Row>\r\n              </Card.Header>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Container>\r\n                <Row>\r\n                  <Col sm={12} lg={6}>\r\n                    <Card.Title>\r\n                      <h5>Role: {review.role}</h5>\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col sm={12} lg={6}>\r\n                    <Card-text>{review.comment ? review.comment : \"No Comment Given\"}</Card-text>\r\n                  </Col>\r\n                </Row>\r\n                </Container>\r\n                <Container className=\"text-center pt-3 text-\">\r\n                <Row>\r\n                  <Col>\r\n                  <a className=\"\"href=\"mailto:zdenardi@gmail.com?subject=Reported Review\">Report Review</a>\r\n                  </Col>\r\n                  {review.response &&\r\n                    <Col>\r\n                      <Button variant=\"primary\" onClick={()=>{changeShow(review)}}>\r\n                        Show Theater Response\r\n                      </Button>\r\n                    </Col>\r\n                  }\r\n                  </Row>\r\n                </Container>\r\n              \r\n            </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Card.Footer>\r\n            <Row>\r\n              <Col className=\"text-left\">\r\n                <p> Professional Rating: {review.profRating}/5</p>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <p> WorthWhile Rating: {review.worthWhileRating}/5</p>\r\n              </Col>\r\n            </Row>            \r\n          </Card.Footer>                   \r\n          </Card>\r\n        </Accordion>\r\n          )}\r\n\r\n          <Modal show={show} onHide={changeShow}>\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title>Theater Rep's Response</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{activeReview ? activeReview.response : \"No response given\"}</Modal.Body>\r\n                    <Modal.Footer>\r\n                      <Button variant=\"secondary\" onClick={changeShow}>\r\n                        Close\r\n                      </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n      </Container>\r\n      \r\n      \r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ReviewsList","import React,{useEffect,useState} from 'react';\r\nimport CompanyDetail from \"../components/CompanyDetail\"\r\nimport ReviewsList from '../components/ReviewsList';\r\n\r\n\r\nconst CompanyDetailPage =({match}) => {\r\n  const id = match.params.id\r\n  console.log(id)\r\n\r\n  const [reviewsInfo,setReviewsInfo] =useState([]);\r\n  const [companiesInfo,setCompaniesInfo] = useState([]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n\r\n        const reviews = await fetch(`/api/reviews/companies/${id}`)\r\n        const bodyReviews = await reviews.json();\r\n        const companyres = await fetch(`/api/companies/company/${id}`)\r\n        const bodyCompRes = await companyres.json();\r\n\r\n\r\n            \r\n        setReviewsInfo(bodyReviews.data)\r\n        setCompaniesInfo(bodyCompRes.data)\r\n    }\r\n    fetchData()\r\n  },[])\r\n  \r\n  const reviews = reviewsInfo\r\n  const company = companiesInfo\r\n  return(\r\n  <React.Fragment>\r\n  <CompanyDetail company={company}/>\r\n  <ReviewsList reviews={reviews}/>\r\n  </React.Fragment>\r\n  \r\n\r\n)\r\n  }\r\nexport default CompanyDetailPage","import React from 'react'\r\n\r\nconst NotFoundPage=() => (\r\n  <div class=\"container text-center\">\r\n    <h1> Error 404</h1>\r\n    <h2>Error not found</h2>\r\n  </div>\r\n);\r\n\r\n\r\nexport default NotFoundPage;","import React,{useState} from 'react';\r\nimport useForm from 'react-hook-form'\r\nimport {registerUser} from './UserFunctions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Register= ({}) => {\r\n   const {register, handleSubmit} = useForm();\r\n   const [email, setEmail] = useState();\r\n   const [password, setPassword] = useState();\r\n   const [isRegistered, setIsRegistered] = useState(false)\r\n\r\n   const userLogin=() => {\r\n      const newUser ={\r\n         email: email,\r\n         password: password\r\n      }\r\n      registerUser(newUser).then(res => {\r\n         setIsRegistered(true)\r\n         \r\n      })\r\n\r\n      console.log(\"Button Pressed\")\r\n   };\r\n\r\n\r\n   if (isRegistered === true){\r\n      return(\r\n         <Redirect to =\"/login\"></Redirect>\r\n      )\r\n   }else {\r\n      return(<React.Fragment>\r\n\r\n         <div class=\"container\">\r\n               <div class=\"col-md-6 mx-auto text-center\">\r\n                  <div class=\"header-title\">\r\n                     <h1 class=\"wv-heading--title\">\r\n                        Create Account!\r\n                     </h1>\r\n                     <p class=\"wv-heading--subtitle\">\r\n                        We promise to keep your anonymity. Your email will only be used to verify you're not a bot. All reviews are posted anonymously. \r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div class=\"row\">\r\n                  <div class=\"col-md-4 mx-auto\">\r\n                     <div class=\"myform form \">\r\n                        <form onSubmit={handleSubmit(userLogin)} method=\"post\" name=\"register\">\r\n                           <div class=\"form-group\">\r\n                              <input type=\"email\" name=\"emailField\"  class=\"form-control my-input\" id=\"emailField\" value={email} onChange={(event) => setEmail(event.target.value)}  ref={register({required:true})} placeholder=\"Email\"/>\r\n                           </div>\r\n                           <div class=\"form-group\">\r\n                              <input type=\"password\" name=\"passwordField\"  class=\"form-control my-input\" id=\"passwordField\" placeholder=\"Password\" value={password} onChange={(event) => setPassword(event.target.value)}  ref={register({required:true})}/>\r\n                           </div>\r\n                           \r\n                           <div class=\"text-center \">\r\n                              <button type=\"submit\" class=\" btn btn-block send-button btn-primary\">Create Your Free Account</button>\r\n                           </div>\r\n                           \r\n                           <p class=\"small mt-3\">By signing up, you are indicating that you have read and agree to the <a href=\"#\" class=\"ps-hero__content__link\">Terms of Use</a> and <a href=\"#\">Privacy Policy</a>.\r\n                           </p>\r\n                        </form>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </React.Fragment>\r\n         );\r\n   }\r\n\r\n\r\n   \r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Register from '../components/Register'\r\n\r\nconst UserCreate =() => (\r\n  <Register/>\r\n\r\n)\r\nexport default UserCreate","import React,{useState,useContext} from 'react';\r\nimport {Link,Redirect} from 'react-router-dom'\r\nimport useForm from 'react-hook-form'\r\nimport {loginUser} from './UserFunctions'\r\nimport {Alert} from 'react-bootstrap'\r\nimport LinkButton from './utilcomponents/LinkButton'\r\nimport {AuthContext} from '../utils/AuthContext';\r\nimport jwt_decode from 'jwt-decode'\r\n\r\n\r\n\r\nconst Login= ({}) => {\r\n   const {register, handleSubmit} = useForm();\r\n   const [email, setEmail] = useState();\r\n   const [password, setPassword] = useState();\r\n   const [errors,setErrors] = useState();\r\n   const [state,setState]= useContext(AuthContext)\r\n   const userLogin=() => {\r\n      const user ={\r\n         email: email,\r\n         password: password\r\n      }\r\n      loginUser(user).then(res => {\r\n         if(res ===\"There was a problem\"){ \r\n            setErrors(\"Hmm...you want to try that again?\")\r\n         }else{\r\n            const token = localStorage.getItem('userToken')\r\n            const decoded = jwt_decode(token)\r\n            const email = decoded.email;\r\n            const id = decoded.user_id;\r\n            const status = decoded.status;\r\n           \r\n            setState({loggedIn:true,id:id,email:email,status:status})\r\n         }\r\n         \r\n      })\r\n\r\n   };\r\n\r\n   return(\r\n   \r\n   <React.Fragment>\r\n   {state.loggedIn && <Redirect to =\"/\"></Redirect> }\r\n\r\n   <div className=\"container\">\r\n         <div className=\"col-md-6 mx-auto text-center\">\r\n            <div className=\"header-title\">\r\n               <h1 className=\"wv-heading--title\">\r\n                  Login\r\n               </h1>\r\n               <p className=\"wv-heading--subtitle\">\r\n                  We promise to keep your anonymity. Your email will only be used to verify you're not a bot. All reviews are posted anonymously. \r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"row\">\r\n            <div className=\"col-md-4 mx-auto\">\r\n               <div className=\"myform form \">\r\n                  <form onSubmit={handleSubmit(userLogin)} method=\"post\" name=\"login\">\r\n                     <div className=\"form-group\">\r\n                        <input type=\"email\" name=\"emailField\"  className=\"form-control my-input\" id=\"emailField\" value={email} onChange={(event) => setEmail(event.target.value)}  placeholder=\"Email\" ref={register({required:true})}/>\r\n                     </div>\r\n                     <div className=\"form-group\">\r\n                        <input type=\"password\" name=\"passwordField\"  className=\"form-control my-input\" id=\"passwordField\" placeholder=\"Password\" value={password} onChange={(event) => setPassword(event.target.value)} ref={register({required:true})}  />\r\n                     </div>\r\n                     \r\n                     <div className=\"text-center \">\r\n                        <button  type=\"submit\" className=\" btn btn-block send-button btn-primary\">Login</button>\r\n                     </div>\r\n                  </form>                  \r\n               </div>\r\n               <div className=\"container text-center pt-2\">\r\n                    <Link to=\"/reset\">I forgot my password...</Link>\r\n               </div>\r\n               <div className=\"container text-center pt-5\">\r\n                    <p>Don't have an account?</p>\r\n                    <LinkButton className=\"btn btn-primary btn-sm btn-block\" to=\"/register\">Create one!</LinkButton>\r\n               </div>\r\n               {errors &&\r\n                  <Alert variant=\"danger\">Hmm...there was a problem....Try again?</Alert>\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </React.Fragment>\r\n   )\r\n}\r\n  \r\n\r\nexport default Login;","import React from 'react';\r\nimport Login from '../components/Login'\r\n\r\nconst LoginUser =() => (\r\n  <Login/>\r\n\r\n)\r\nexport default LoginUser","import React,{useState,useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode'\r\nimport {AuthContext} from './utils/AuthContext';\r\nimport {MessageContext} from './utils/MessageContext'\r\n\r\nconst NavBar = () => {\r\n  //is the user logged in?\r\n  const [state,setState]=useContext(AuthContext)\r\n\r\n\r\n  const changeLogin=()=>{\r\n      localStorage.removeItem('userToken')\r\n      setState({loggedIn:!state.loggedIn})    \r\n  }\r\n\r\n  \r\n \r\n\r\nreturn(\r\n  \r\n  \r\n  \r\n  <>\r\n  <header>\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">FourthWall</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      \r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link to= \"/\">Home <span className=\"sr-only\">(current)</span> </Link>\r\n            </li>\r\n            \r\n            <li className=\"nav-item mx-2\">\r\n            {state.loggedIn ?\r\n              <Link to =\"#\" onClick={changeLogin}>Logout</Link>\r\n              :\r\n              <Link to =\"/Login\">Login</Link>\r\n            }\r\n            \r\n            </li>\r\n            <li className=\"nav-item mx-2\">\r\n                <Link to =\"/AddReview\">Add Review</Link>        \r\n            </li>\r\n            <li className=\"nav-item mx-2\">\r\n                <Link to =\"/Companies\">View Companies</Link>        \r\n            </li>\r\n            {state.loggedIn && \r\n            <li className=\"nav-item mx-2\">\r\n                <Link to =\"/profile\">Profile</Link>        \r\n            </li>\r\n            }\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n    \r\n  </>\r\n  \r\n)}\r\n    \r\nexport default NavBar","import React from 'react';\r\nimport LinkButton from './utilcomponents/LinkButton'\r\nimport {Card,\r\n        Container,\r\n        Row,\r\n        Col} from 'react-bootstrap'\r\n\r\nconst ReviewDetail= ({review}) => {\r\n\r\n  const repRes = () =>{\r\n    if(review.responseAns == 1 ){\r\n      return(\"Yes\")\r\n    }else {\r\n      return(\"No\")\r\n    }\r\n  }\r\n  \r\n  return(\r\n  <React.Fragment>\r\n      <Card className=\"card mx-auto mt-2\" style={{width: 400}}>\r\n        <Card.Header>\r\n        <Row>\r\n          <Container className=\"text-center\">\r\n            <h5>{review.companyName}</h5>\r\n            <h6>Pay: {review.rateofPay ? review.rateofPay : \"The user did not provide details on pay\"}</h6>          \r\n            </Container>        \r\n        </Row>\r\n        </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <h5 className=\"text-center\">Role: {review.role}</h5>\r\n              </Card.Title>\r\n                <Card.Text>\r\n                  <p>{review.comment}</p>\r\n                </Card.Text>\r\n                <Container className=\"d-flex justify-content-center\">\r\n                  <LinkButton to=\"/profile\" class=\"btn btn-primary\">Back To Your Profile</LinkButton>\r\n                </Container>\r\n            </Card.Body>\r\n          <Card.Footer>\r\n            <Row>\r\n              <Col className=\"text-left\">\r\n                <p> Professional Rating:{review.profRating}/5</p>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <p> WorthWhile Rating:{review.worthWhileRating}/5</p>\r\n              </Col>\r\n            </Row>\r\n          </Card.Footer>\r\n      </Card>\r\n  </React.Fragment>\r\n)}\r\n;\r\n\r\nexport default ReviewDetail;","import React, {useState, useEffect} from 'react';\r\nimport ReviewDetail from '../components/ReviewDetail';\r\n\r\n\r\nconst DetailReviewPage =({match}) => {\r\n  const id = match.params.id\r\n  \r\n  const [reviewInfo,setReviewInfo] =useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n        const result = await fetch(`/api/reviews/review/${id}`)\r\n        const body = await result.json();\r\n        setReviewInfo(body.data)\r\n    }\r\n    fetchData()\r\n  },[id])\r\n  const review = reviewInfo;\r\n\r\n\r\n  return(\r\n  <React.Fragment>\r\n  \r\n    <ReviewDetail review={review}/>\r\n  </React.Fragment>\r\n\r\n  );\r\n}\r\nexport default DetailReviewPage","import React,{useState} from 'react'\r\n\r\nconst ReviewContext = React.createContext([{}, () => {}]);\r\n\r\nconst ReviewProvider = (props) =>{    \r\n  \r\n  const [review, setReview] = useState({});\r\n  console.log(\"context loading\")\r\n\r\n  return(\r\n    <ReviewContext.Provider value ={[review,setReview]}>\r\n      {props.children}\r\n    </ReviewContext.Provider>\r\n  );\r\n}\r\n\r\nexport {ReviewContext,ReviewProvider}","import React,{useState,useContext,useEffect} from 'react'\r\nimport useForm from 'react-hook-form'\r\nimport moment from 'moment';\r\nimport {AuthContext} from '../utils/AuthContext'\r\nimport {editReview} from './UserFunctions'\r\nimport LinkButton from \"./utilcomponents/LinkButton\"\r\nimport {Container,Row,Form,Col,Spinner,Button,Tooltip,OverlayTrigger,Badge} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom';\r\nimport {MessageContext} from '../utils/MessageContext'\r\nconst token = localStorage.getItem('userToken')\r\n\r\n  const ReviewEdit = ({review,companies}) => {\r\n    const {register,handleSubmit} = useForm();\r\n    const [state,setState]= useContext(AuthContext)\r\n    const [message,setMessage]=useContext(MessageContext)\r\n    const [edited,setEdited]=useState(false)\r\n    let m = moment();\r\n    const MYSQLDate = m.format('YYYY-MM-DD HH:mm:ss');\r\n    const numbers = [1, 2, 3, 4, 5];\r\n    const ROLES=[\"Actor\",\"Designer\",\"Director\",\"Production\"]\r\n    const givenRoleValue=ROLES.indexOf(review.role)\r\n    const [resBol,setResBol] = useState(false)\r\n\r\n\r\n    const profNumbers = numbers.map((number) =>{\r\n      if(number === review.profRating){\r\n        return(\r\n          <Form.Check \r\n          inline \r\n          label={number}\r\n          name=\"profRating\"\r\n          type=\"radio\" \r\n          value={number}\r\n          onChange={(event) => (review['profRating']=event.target.value)}\r\n          ref={register({required:true})}\r\n          defaultChecked\r\n              \r\n        />\r\n\r\n        )\r\n      }\r\n      \r\n      return(\r\n      <Form.Check \r\n        inline \r\n        label={number}\r\n        name=\"profRating\"\r\n        type=\"radio\" \r\n        value={number}\r\n        onChange={(event) => (review['profRating']=event.target.value)}\r\n        ref={register({required:true})}\r\n            \r\n      />\r\n      )\r\n    });\r\n    const worthWhileNumbers = numbers.map((number) =>{\r\n      if(number === review.worthWhileRating){\r\n        return(\r\n          <Form.Check \r\n          inline \r\n          label={number}\r\n          name=\"worthWhileRating\"\r\n          type=\"radio\" \r\n          value={number}\r\n          onChange={(event) => (review['worthWhileRating']=event.target.value)}\r\n          ref={register({required:true})}\r\n          defaultChecked\r\n        />\r\n\r\n        )\r\n      }\r\n      \r\n      return(\r\n      <Form.Check \r\n        inline \r\n        label={number}\r\n        name=\"worthWhileRating\"\r\n        type=\"radio\" \r\n        value={number}\r\n        onChange={(event) => (review['worthWhileRating']=event.target.value)}\r\n        ref={register({required:true})}\r\n            \r\n      />\r\n      )\r\n    });\r\n    const checkRespondable = () =>{\r\n      if (parseInt(review.responseAns) != 1 ){\r\n        return(\r\n          <Form.Check\r\n                type=\"checkbox\"\r\n                id=\"responseAns\"\r\n                label=\"Are you okay with a Representative from this theater publically respond to this review?\"\r\n                onChange={(event)=>(review['responseAns']='1')}\r\n\r\n                />\r\n        )\r\n      }else{\r\n        return(\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          defaultChecked\r\n          id=\"responseAns\"\r\n          label=\"Are you okay with a Representative from this theater publically respond to this review?\"\r\n          onChange={(event)=>(review['responseAns']='0')}\r\n\r\n          />)\r\n      }\r\n    }\r\n\r\n    function responseAnsToolTip(props){\r\n      return <Tooltip {...props}>A Representative of the Theater would be answer publically about this review. They would not be able ot see your email or be able to personally contact you in anyway.</Tooltip>\r\n    }\r\n \r\n\r\n\r\n\r\n\r\n    const reviewHandler=() => { \r\n   \r\n      editReview(review).then(res => {\r\n        setMessage(message => ({ ...message, alert: 'Review Edited!',type:\"success\" }))\r\n        setEdited(true)\r\n        \r\n        })  \r\n      } \r\n\r\n  if (edited === true){\r\n    return(\r\n    <Redirect to ={`/review/${review.review_id}`}></Redirect>\r\n    )}\r\n\r\n\r\n  if(!review.user_id){\r\n    return (\r\n      <>\r\n     <Container className=\"justify-content-center\">\r\n      <Spinner animation=\"grow\"/>\r\n    </Container>\r\n      </>\r\n    )\r\n  }\r\n  return(\r\n      <React.Fragment>\r\n      {state.id != review.user_id && <Redirect to=\"/profile\"/>}\r\n\r\n      \r\n      \r\n        <Container className=\"text-center\">\r\n          <Form  onSubmit={handleSubmit(reviewHandler)} className=\"form-horizontal\">\r\n            <Form.Group controlId=\"formEditReview\">\r\n              {/* <!-- Form Name --> */}\r\n              <legend>Edit Review</legend>\r\n              {/* <!-- Select Basic --> */}\r\n              <Form.Group>\r\n                <Form.Label className=\"col-md-4 control-label\">Company</Form.Label>\r\n                  <Col className=\"col-md-4 mx-auto\">\r\n                    <Form.Control \r\n                      as=\"select\"\r\n                      id=\"CompanySelect\" \r\n                      name=\"CompanySelect\"  \r\n                      onChange={(event) => (review['company_id']=event.target.value)} \r\n                      ref={register({required:true})}>\r\n                      <option value={review.company_id}>{review.companyName}</option>\r\n                      {companies.map((company,key)=>\r\n                      <option key={key}value={company.company_id}>{company.companyName}</option> \r\n                    )}\r\n                    \r\n                  </Form.Control>\r\n                </Col>\r\n                </Form.Group>            \r\n              {/* <!-- Select Basic --> */}\r\n              <Form.Group>\r\n                  <Form.Label className=\"col-md-4 control-label\" for=\"roleSelect\" >Role</Form.Label>\r\n                  <Col className=\"col-md-4 mx-auto\">\r\n                    <Form.Control as=\"select\" \r\n                                  id=\"roleSelect\" \r\n                                  name=\"Role\" \r\n                                  className=\"form-control\" \r\n                                  defaultValue={ROLES[givenRoleValue]} \r\n                                  ref={register({required:true})} \r\n                                  onChange = {(event) => (review['role']=event.target.value)}>\r\n                      <option value = {givenRoleValue}>{review.role}</option>\r\n                      <option value={0}>Actor</option>\r\n                      <option value={1}>Designer</option>\r\n                      <option value={2}>Director</option>\r\n                      <option value={3}>Production</option>\r\n                    </Form.Control>\r\n                  </Col>\r\n                </Form.Group>\r\n              \r\n            \r\n              \r\n              {/* <!-- Professional Rating */}\r\n              <Form.Group>\r\n              \r\n                <Form.Label className=\"col-md-4 control-label\" for=\"ratingProfessional\">Professionalism</Form.Label>\r\n                        <div>\r\n                        {profNumbers}\r\n                        </div>               \r\n                </Form.Group>\r\n                  \r\n              \r\n              {/* <!-- WorthWhile --> */}\r\n              <Form.Group>\r\n              <Form.Label className=\"col-md-4 control-label\" for=\"ratingProfessional\">WorthWhile</Form.Label>\r\n                        <div>\r\n                        {worthWhileNumbers}\r\n                        </div>               \r\n              </Form.Group>\r\n              \r\n              \r\n              {/* <!-- Rate of Pay--> */}\r\n              <Form.Group>\r\n                <Form.Label className=\"col-md-4 control-label\" for=\"inputPay\">Rate of Pay</Form.Label>  \r\n                  <Col className=\"col-md-4 mx-auto\">\r\n                <Form.Control \r\n                      id=\"inputpay\" \r\n                      name=\"RateOfPay\"\r\n                      as=\"textarea\"  \r\n                      className = \"form-control input-md\" \r\n                      onChange={(event)=>(review['rateofPay']=event.target.value)}\r\n                      ref={register}\r\n                      defaultValue={review.rateofPay} \r\n                      />\r\n        \r\n                  <span className=\"help-block\">Not required </span>  \r\n                </Col>\r\n              </Form.Group>\r\n              \r\n              {/* <!-- Comments --> */}\r\n              <Form.Group>\r\n                <Form.Label className=\"col-md-4 control-label\" for=\"input\">Comments:</Form.Label>  \r\n                  <Col className=\"col-md-4 mx-auto\">\r\n                <Form.Control \r\n                      id=\"inputComment\"\r\n                      defaultValue={review.comment} \r\n                      name=\"Comment\"\r\n                      as=\"textarea\" \r\n                      className = \"form-control input-md\" \r\n                      onChange={(event)=>(review['comment']=event.target.value)}\r\n                      ref={register}\r\n                      />\r\n                </Col>\r\n              </Form.Group>\r\n              \r\n               \r\n          </Form.Group>\r\n              <Form.Group>\r\n              <div>\r\n                {checkRespondable()}\r\n              </div>      \r\n              <OverlayTrigger\r\n                  placement=\"center\"\r\n                  delay={{ show: 250, hide: 400 }}\r\n                  overlay={responseAnsToolTip}\r\n                >\r\n                  <Badge className=\"p3\" pill variant=\"info\">?</Badge>\r\n                </OverlayTrigger>    \r\n\r\n              </Form.Group>\r\n                \r\n\r\n\r\n          <Col className=\"col-md-4 mx-auto\">\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n                </Col>\r\n                <LinkButton to=\"/profile\" class=\"btn btn-primary m-2\">Back To List</LinkButton>    \r\n        </Form>\r\n          \r\n           </Container>\r\n    </React.Fragment>\r\n  \r\n  )\r\n}\r\n\r\n\r\nexport default ReviewEdit","import React, {useState, useEffect,useContext} from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport ReviewEdit from '../components/ReviewEdit';\r\nimport {AuthContext} from '../utils/AuthContext';\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst EditReviewPage =({match}) => {\r\n  const id = match.params.id\r\n  const [reviewInfo,setReviewInfo] =useState({});\r\n  const [companiesInfo,setCompaniesInfo]=useState([]);\r\n  const [isLoaded,setIsLoaded]=useState(false)\r\n  const [state,setState]=useContext(AuthContext)\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      const result = await fetch(`/api/reviews/review/${id}`)\r\n      const body = await result.json();\r\n      setReviewInfo(body.data)\r\n\r\n      const companies = await fetch('/api/companies');\r\n      const bodyCompanies = await companies.json();\r\n      \r\n      setCompaniesInfo(bodyCompanies.data)\r\n    }\r\n    if(isLoaded===false){ \r\n      fetchData();\r\n      setIsLoaded(true)\r\n    }\r\n  },[isLoaded])\r\n  const companies = companiesInfo\r\n \r\n const review = reviewInfo\r\n\r\n\r\n\r\n    return(\r\n      \r\n    <React.Fragment>\r\n        {(!state.loggedIn ? <Redirect to = \"/login\"/> :null)}\r\n        {!isLoaded ? <Spinner animation=\"grow\"/>\r\n        :\r\n        <ReviewEdit review = {review} companies= {companies}/>\r\n        }\r\n\r\n      \r\n    </React.Fragment>\r\n\r\n    );\r\n  }\r\n\r\nexport default EditReviewPage","import React,{useEffect,useState,useContext} from 'react'\r\nimport {Table, Container} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport {Link} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/AuthContext'\r\nconst ReviewTable = ({id,status}) =>{\r\n  \r\n  const [reviews,setReviews] = useState()\r\n \r\n  useEffect(() => {\r\n    const getReviews = () =>{\r\n      const URL = status === \"rep\" ? `api/reviews/rep/${id}` : `/api/reviews/user/${id}`\r\n     \r\n\r\n      axios.get(URL,{\r\n      })\r\n      .then(({data})=>{\r\n        console.log(data.data)\r\n        setReviews(data.data)\r\n      }).catch((err)=>{\r\n        console.log(err)\r\n        console.log(err.message)\r\n      })    \r\n    }\r\n    \r\n    getReviews()\r\n  },[])\r\n  if(!reviews){\r\n    return(\r\n      <Container>\r\n        <p>No reviews just yet</p>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return(\r\n    <>\r\n    \r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th>Role</th>\r\n            <th>Date Posted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {reviews.map((review,key)=>\r\n        \r\n          <tr>\r\n            <td>{review.companyName}</td>\r\n            <td>{review.role}</td>\r\n            <td>{moment(review.date).format(\"MM/DD/YYYY\")}</td>\r\n            {status ===\"rep\" ? \r\n            (<td><Link to={`/rep/${review.review_id}`}>See Review</Link></td>)\r\n            :\r\n            (\r\n            <>  \r\n            <td><Link to={`/review/edit/${review.review_id}`}>Edit</Link></td>\r\n            <td><Link to={`/review/Delete/${review.review_id}`}>Delete</Link></td>\r\n            </>\r\n            )\r\n            }\r\n            \r\n          </tr>\r\n        )}        \r\n        </tbody>\r\n    </Table>\r\n     \r\n    \r\n    </>\r\n    \r\n  )\r\n}\r\nexport default ReviewTable","import React,{useContext,useEffect,useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport ReviewTable from './utilcomponents/ReviewTable'\r\nimport {AuthContext} from '../utils/AuthContext';\r\nimport {Container,Col,Row,Spinner} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst Profile =() => {\r\n  const [state,setState]=useContext(AuthContext)\r\n  const id = state.id\r\n  const [isLoaded,setIsLoaded]= useState(false);\r\n\r\n  const sitepermissions = () => {\r\n      switch(state.status){\r\n        case \"rep\":\r\n          return (\"Representative\")\r\n          break;\r\n        case \"user\":\r\n          return(\"User\")\r\n          break;\r\n        case \"admin\":\r\n          return(\"Administrator\")\r\n          break;\r\n      }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    console.log(\"Is loaded\")\r\n  },[])\r\n\r\n  if(isLoaded === false){\r\n    setIsLoaded(true)\r\n    return(\r\n    <Container>\r\n      <Spinner />\r\n    </Container>\r\n    )\r\n  }\r\n\r\nreturn(\r\n  <>\r\n        {(!state.loggedIn && <Redirect to = \"/login\"/>)}\r\n\r\n  <div>\r\n    <h3 class=\"text-center bg-white p-2 ml-5 mr-5\"> User Profile</h3>\r\n    <div class=\"container mt-3 border bg-white\">\r\n          <p>Email: {state.email}</p>\r\n          <p>Status: {sitepermissions()}</p>\r\n    </div>\r\n      \r\n    <div class=\"container mt-3 p-5 border bg-white\">\r\n    {state.status===\"rep\" && <p>Here are all the reviews that are respondable.</p>}\r\n    <ReviewTable id={id} status={state.status}/>\r\n    </div>\r\n  </div>\r\n  \r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from '../components/Profile'\r\n\r\n\r\nconst ProfilePage =() => {\r\n  \r\nreturn(\r\n  <React.Fragment>\r\n  <Profile></Profile>\r\n  </React.Fragment>\r\n\r\n)}\r\nexport default ProfilePage","import React,{useState,useContext} from 'react';\r\nimport useForm from 'react-hook-form'\r\nimport axios from 'axios'\r\nimport {MessageContext} from '../utils/MessageContext'\r\nimport { Container } from 'react-bootstrap';\r\nimport  Fade  from 'react-bootstrap/Fade';\r\n\r\n\r\n\r\nconst Reset= () => {\r\n   const {register, handleSubmit} = useForm();\r\n   const [email, setEmail] = useState(\"\");\r\n   const [errors,setErrors] = useState(\"\");\r\n   const [resetSent,setResetSent]= useState(false);\r\n   const [msgFromServer,setMsgFromServer]=useState('');\r\n   const [message,setMessage]= useContext(MessageContext)\r\n   const [isSubmit, setIsSubmit] = useState(false)\r\n   \r\n\r\n   const passwordReset = e =>{\r\n      if(email === ''){\r\n         setErrors(true)\r\n         setMessage(message => ({ ...message, alert: 'Please enter your email!',type:\"danger\" }))\r\n      }else{\r\n         setIsSubmit(true)\r\n         axios\r\n         .post('/users/forgotPassword',{\r\n            email: email,\r\n         })\r\n         .then(res => {\r\n            \r\n            if(res.data ==='email not in db'){\r\n               setErrors(true)\r\n               setMsgFromServer('')\r\n            } else if (res.data ==='recovery email sent'){\r\n               \r\n               setErrors(false)\r\n               \r\n            }\r\n         })\r\n         .catch(error=>{\r\n            setMessage({ ...message, alert: 'Uhoh...we had a problem. Please contact the Administrator',type:\"danger\" })\r\n         })\r\n      }\r\n   }\r\n  \r\n   return(\r\n      <React.Fragment>\r\n         <div class=\"container\">\r\n            <div class=\"col-md-6 mx-auto text-center\">\r\n               <div class=\"header-title\">\r\n                  <h1 class=\"wv-heading--title\">\r\n                     Password Reset\r\n                  </h1>\r\n               </div>\r\n            </div>\r\n            <div class=\"row\">\r\n               <div class=\"col-md-4 mx-auto\">\r\n                  <div class=\"myform form \">\r\n                     <form onSubmit={handleSubmit(passwordReset)} method=\"post\" name=\"reset\">\r\n                        <div class=\"form-group\">\r\n                           <input type=\"email\" name=\"emailField\"  class=\"form-control my-input\" id=\"emailField\" value={email} onChange={(event) => setEmail(event.target.value)}  placeholder=\"Input your email\" ref={register({required:true})}/>\r\n                        </div>\r\n                        \r\n                        <div class=\"text-center \">\r\n                           <button  type=\"submit\" class=\" btn btn-block send-button btn-primary\">Reset Password</button>\r\n                        </div>\r\n                     </form>                  \r\n                  </div>\r\n               </div>\r\n            </div>\r\n            {isSubmit && \r\n               <Fade in ={isSubmit}>\r\n                  <Container className=\"col-md-6 mx-auto text-center\">\r\n                     <p> If your email is the database, you will revieve and email shortly. Please check your inbox and follow instructions there.</p>\r\n                  </Container>\r\n               </Fade>\r\n            }\r\n                 \r\n               \r\n            \r\n            \r\n         </div>\r\n      </React.Fragment>\r\n   )\r\n}\r\nexport default Reset;","import React from 'react';\r\nimport Reset from '../components/Reset'\r\n\r\nconst ResetPage =() => (\r\n  <Reset/>\r\n\r\n)\r\nexport default ResetPage","import React,{useEffect,useState} from 'react';\r\nimport useForm from 'react-hook-form'\r\nimport {Container} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport LinkButton from '../components/utilcomponents/LinkButton'\r\n\r\n\r\n\r\nconst ResetForm= ({match}) => {\r\n   const {register, handleSubmit} = useForm();\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [isUpdate,setIsUpdate] = useState(null);\r\n   const [isLoading,setIsLoading] = useState(false);\r\n   const [error,setError] = useState(false);\r\n   const [token, setToken] = useState(match.params.token);\r\n\r\n\r\n   useEffect (() => {\r\n      async function resetPassword() {\r\n         axios.get('/users/reset', {\r\n            params:{\r\n               resetPasswordToken: token\r\n            },\r\n         })\r\n         .then(res => {\r\n            if (res.data.message === 'password reset link ok'){\r\n               setEmail(res.data.email);\r\n               setIsUpdate(false);\r\n               setIsLoading(false);\r\n               setError(false);\r\n            } else {\r\n               setIsUpdate(false);\r\n               setIsLoading(false);\r\n               setError(true);\r\n            }\r\n         }).catch(err =>{\r\n            console.log(error.data);\r\n         });\r\n      }\r\n      resetPassword();\r\n   },[]);\r\n\r\n\r\n\r\n   const resetPassword= e => {\r\n\r\n      axios\r\n         .put('/users/updatePasswordViaEmail', {\r\n            email: email,\r\n            password: password\r\n         })\r\n         .then (res => {\r\n            console.log(res.data);\r\n            if (res.data.message === 'password updated'){\r\n               setIsUpdate(true);\r\n               setError(false);\r\n            }else {\r\n               setIsUpdate(false);\r\n               setError(true);\r\n            }\r\n            \r\n         }).catch(err => {\r\n            console.log(err.data)\r\n         })\r\n   };\r\n\r\n\r\n\r\n//Rendering\r\n      if(error){\r\n         return(\r\n            <Container>\r\n               <h4>Problems resetting password. Please send another reset link</h4>\r\n            </Container>\r\n         )\r\n      } else if (isLoading){\r\n         return(\r\n            <Container>\r\n               <p> Loading User Data...</p>\r\n            </Container>\r\n            )\r\n      } else {\r\n         return(<React.Fragment>\r\n\r\n            <div class=\"container\">\r\n                  <div class=\"col-md-6 mx-auto text-center\">\r\n                     <div class=\"header-title\">\r\n                        <h1 class=\"wv-heading--title\">\r\n                           Password Reset \r\n                        </h1>\r\n                     </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                     <div class=\"col-md-4 mx-auto\">\r\n                        <div class=\"myform form \">\r\n                           <form onSubmit={handleSubmit(resetPassword)} method=\"post\" name=\"register\">\r\n                              <div class=\"form-group\">\r\n                                 <input type=\"password\" \r\n                                       name=\"passwordField\"  \r\n                                       class=\"form-control my-input\" \r\n                                       id=\"passwordField\" \r\n                                       placeholder=\"New Password\" \r\n                                       value={password} \r\n                                       onChange={(event) => setPassword(event.target.value)}  ref={register({required:true})}/>\r\n                              </div>    \r\n                              <div class=\"text-center \">\r\n                                 <button type=\"submit\"\r\n                                 class=\" btn btn-block send-button btn-primary\">\r\n                                 Update Password\r\n                                 </button>\r\n                              </div>\r\n                           </form>\r\n                           {isUpdate && (\r\n                              <Container>\r\n                                 <p>\r\n                                    Your password has been successfully reset, please try logging in again.\r\n                                 </p>\r\n                                 <LinkButton to=\"Login\" class=\"btn btn-primary\">Login</LinkButton>\r\n\r\n                              </Container>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </React.Fragment>\r\n            );\r\n\r\n      }\r\n      \r\n   }\r\n\r\n\r\n   \r\n\r\n\r\nexport default ResetForm;","import React from 'react';\r\nimport ResetFromEmail from '../components/ResetForm'\r\n\r\n\r\nconst ResetEmailPage =({match}) => \r\n  { \r\n    \r\n  \r\n  return(\r\n  <React.Fragment>\r\n  <ResetFromEmail match = {match}/>\r\n\r\n  </React.Fragment>\r\n\r\n)}\r\nexport default ResetEmailPage","import React,{useState,useContext} from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport LinkButton from './utilcomponents/LinkButton'\r\nimport {deleteReview} from './UserFunctions'\r\nimport jwt_decode from 'jwt-decode'\r\nimport {MessageContext} from '../utils/MessageContext';\r\nimport {AuthContext} from '../utils/AuthContext';\r\nimport {Card,\r\n        Button,\r\n        Container,\r\n        Row,\r\n        Col,\r\n        Spinner} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst ReviewDetail= ({review}) => {\r\n \r\n  let{review_id}=review\r\n  const [isDeleted,setIsDeleted]=useState(false)\r\n  const [message,setMessage]=useContext(MessageContext)\r\n  const [state,setState]=useContext(AuthContext)\r\n\r\n  \r\n  \r\n\r\n  const handleClick=()=>{\r\n    const review={\r\n      review_id:review_id,\r\n      user_id:state.id\r\n        }\r\n    deleteReview(review).then(res=>{\r\n    })\r\n    setMessage(message => ({ ...message, alert: 'Review Deleted!',type:\"danger\" }))\r\n\r\n    setIsDeleted(true)\r\n  }\r\n  \r\n  \r\n  if(isDeleted===true ){\r\n    return(\r\n    <Redirect to=\"/profile\"></Redirect>\r\n    )\r\n  }\r\n  if(!review.user_id)\r\n  return(\r\n    <>\r\n    <Container className=\"justify-content-center\">\r\n     <Spinner animation=\"grow\"/>\r\n    </Container>\r\n    </>\r\n  )\r\n  return(\r\n    \r\n    <React.Fragment>\r\n    {(!state.loggedIn ? <Redirect to = \"/login\"/> :null)}\r\n    {state.id != review.user_id && <Redirect to=\"/profile\"/>}\r\n   \r\n    <Container className=\"text-center pb-2 pt-2\">\r\n      <h1>Delete a review</h1>\r\n    </Container>\r\n        <Card className=\"card mx-auto mt-2\" style={{width: 400}}>\r\n          <Card.Header>\r\n          <Row>\r\n            <Container className=\"text-center\">\r\n              <h5>{review.companyName}</h5>\r\n              <h6 class=\"text-center\">Pay: {review.rateofPay}</h6>\r\n            </Container>        \r\n          </Row>\r\n          </Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <h5 className=\"text-center\">Role: {review.role}</h5>\r\n                </Card.Title>\r\n                  <Card.Text>\r\n                    <p>{review.comment}</p>\r\n                  </Card.Text>\r\n                  <Container className=\"d-flex justify-content-center\">\r\n                    <Button \r\n                    variant=\"danger\"\r\n                    class=\"m-2\"\r\n                    onClick={handleClick}>Delete</Button>\r\n                  </Container>\r\n                  <Container className=\"d-flex justify-content-center\">\r\n                    <LinkButton to=\"/profile\" class=\"btn btn-primary m-2\">Back To List</LinkButton>\r\n                  </Container>\r\n              </Card.Body>\r\n            <Card.Footer>\r\n              <Row>\r\n                <Col className=\"text-left\">\r\n                  <p> Professional Rating:{review.profRating}/5</p>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                  <p> WorthWhile Rating:{review.worthWhileRating}/5</p>\r\n                </Col>\r\n              </Row>\r\n            </Card.Footer>\r\n        </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ReviewDetail;","import React, {useState, useEffect,useContext} from 'react';\r\nimport ReviewDelete from '../components/ReviewDelete';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {MessageContext} from '../utils/MessageContext';\r\n\r\n\r\n\r\nconst EditReviewPage =({match}) => {\r\n  const id = match.params.id\r\n  const [reviewInfo,setReviewInfo] =useState({});\r\n  const [isLoaded,setIsLoaded]=useState(false)\r\n  const [message,setMessage]=useContext(MessageContext)\r\n \r\n  \r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      const result = await fetch(`/api/reviews/review/${id}`)\r\n      const body = await result.json();\r\n      setReviewInfo(body.data)     \r\n    }\r\n    if(isLoaded===false){ \r\n      fetchData();\r\n      setIsLoaded(true)\r\n    }\r\n  },[isLoaded])\r\n \r\n const review = reviewInfo\r\n\r\n\r\n  if(!review){\r\n    setMessage(message => ({ ...message, alert: 'Error:Review does not exist',type:\"danger\" }))\r\n    return(\r\n      \r\n    <Redirect to=\"/profile\"></Redirect>\r\n    )\r\n  }\r\n\r\n  return(\r\n    \r\n  <React.Fragment>\r\n  \r\n    <ReviewDelete review ={review}/>\r\n  </React.Fragment>\r\n\r\n  );\r\n}\r\nexport default EditReviewPage","import React from 'react'\r\nimport {List,Datagrid,TextField,NumberField,ReferenceField,EmailField,EditButton} from 'react-admin'\r\n\r\n\r\nexport const ReviewList = props =>{  \r\n  return(\r\n      \r\n      <List {...props} \r\n      title=\"List of Reviews\"\r\n      sort={{ field: 'review_id', order: 'ASC' }}\r\n      >\r\n          <Datagrid rowClick=\"edit\">\r\n              <TextField source=\"review_id\" />\r\n              <TextField source=\"companyName\" />\r\n              <TextField source=\"role\" />\r\n              <TextField source=\"profRating\" />\r\n              <TextField source=\"worthWhileRating\" />\r\n              <TextField source=\"rateofPay\" />\r\n              <TextField source=\"comment\" />\r\n              <EditButton/>>              \r\n          </Datagrid>\r\n      </List>\r\n  );\r\n  }","import React from 'react'\r\nimport {List,Datagrid,TextField,NumberField,ReferenceField,EmailField,EditButton,Pagination} from 'react-admin'\r\n\r\n\r\nexport const CompanyList = props => (\r\n  <List {...props}\r\n  \r\n  sort={{ field: 'companyName', order: 'ASC' }}\r\n  >\r\n      <Datagrid rowClick=\"edit\">\r\n          <TextField source=\"companyName\" />\r\n          <TextField source=\"companyDetails\" />\r\n          <NumberField source=\"num_of_reviews\" />\r\n          <EditButton/>\r\n      </Datagrid>\r\n  </List>\r\n);","import React from 'react'\r\nimport {SimpleForm,ReferenceInput,TextInput,NumberInput,SelectInput,Edit} from 'react-admin'\r\n\r\n\r\nexport const ReviewEdit = props => (\r\n  <Edit {...props}>\r\n      <SimpleForm>\r\n          <ReferenceInput source=\"review_id\" reference=\"reviews\"><SelectInput optionText=\"id\" /></ReferenceInput>\r\n          <TextInput source=\"role\" />\r\n          <NumberInput source=\"profRating\" />\r\n          <NumberInput source=\"worthWhileRating\" />\r\n          <TextInput source=\"rateofPay\" />\r\n          <TextInput source=\"comment\" />\r\n          <TextInput source=\"companyName\" />\r\n      </SimpleForm>\r\n  </Edit>\r\n);","import React from 'react'\r\nimport {SimpleForm,ReferenceInput,TextInput,NumberInput,SelectInput,Edit} from 'react-admin'\r\n\r\n\r\nexport const CompanyEdit = props => (\r\n  <Edit {...props}>\r\n      <SimpleForm>\r\n          <ReferenceInput source=\"company_id\" reference=\"companies\"><SelectInput optionText=\"id\" /></ReferenceInput>\r\n          <TextInput source=\"companyName\" />\r\n          <TextInput source=\"companyDetails\" />\r\n          <NumberInput source=\"num_of_reviews\" />\r\n          <TextInput source=\"id\" />\r\n      </SimpleForm>\r\n  </Edit>\r\n)","import React from 'react'\r\nimport {SimpleForm,ReferenceInput,TextInput,NumberInput,SelectInput,Create} from 'react-admin'\r\n\r\n\r\nexport const CompanyCreate = props => (\r\n  <Create {...props}>\r\n      <SimpleForm>\r\n          <TextInput source=\"companyName\" />\r\n          <TextInput multiline source=\"companyDetails\" />\r\n      </SimpleForm>\r\n  </Create>\r\n)\r\n","import axios from 'axios';\r\nimport {fetchUtils} from 'react-admin';\r\nimport {qs,stringify} from 'querystring';\r\nconst apiUrl = 'https://localhost:8001';\r\nconst httpClient = fetchUtils.fetchJson;\r\n\r\nexport default {\r\n  create: async (resource, params) =>{\r\n    const {companyName,companyDetails} = params.data\r\n    const API = `/api/${resource}`\r\n    \r\n\r\n    axios.post(`${API}`,{\r\n      companyName:`${companyName}`,\r\n      companyDetails:`${companyDetails}`\r\n    }).then(dataValues => ({\r\n      data: { ...dataValues, id: dataValues.company_id },\r\n  }))\r\n},\r\n\r\n  \r\n\r\n \r\n\r\n\r\n  \r\n        \r\n\r\n\r\n        \r\n  getList: async (resource,params) =>{    \r\n\r\n    const { page, perPage } = params.pagination;\r\n    const { field, order } = params.sort;\r\n    const query = {\r\n        sort: JSON.stringify([field, order]),        \r\n        range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\r\n        filter: JSON.stringify(params.filter),\r\n    };\r\n  \r\n\r\n    const apiURL = `/api/`\r\n    const url =`${apiURL}/${resource}?order=${order}&sort=${field}&page=${page}&pageSize=${perPage}`;\r\n\r\n    const fetchedData = await (axios.get(`${url}`));\r\n    const content = await fetchedData.data.data\r\n    \r\n    const total = await fetchedData.data.total\r\n    \r\n    switch (resource) {\r\n      case \"reviews\":\r\n        return ({\r\n          data: content.map(review => ({...review, id: review.review_id }) ),\r\n          total:total\r\n      });\r\n      break;\r\n      case \"companies\":\r\n        return({\r\n          data: content.map(company => ({ ...company, id: company.company_id }) ),\r\n          total:total\r\n      });\r\n      break;\r\n      case \"users\":\r\n        return({\r\n          data: content.map(user => ({ ...user, id: user.user_id }) ),\r\n          total:total\r\n      });\r\n      break;\r\n\r\n    }\r\n  },\r\n  \r\n  getMany: async (resource, params) => {\r\n    const query = {\r\n        filter: JSON.stringify({ id: params.company_ids }),\r\n    };\r\n    const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n    return await axios.get(url).then(({ json }) => ({ data: json }));\r\n  },\r\n\r\n  getOne: async (resource,params) =>{\r\n    switch (resource){\r\n      case \"reviews\":\r\n         const reviews = await axios.get(`/api/${resource}/review/${params.id}`);\r\n         return ({...reviews.data, id: reviews.data.review_id})        \r\n\r\n        break;\r\n      case \"companies\":\r\n         const companies = await axios.get(`/api/${resource}/company/${params.id}`);\r\n         return ({...companies.data, id: companies.data.company_id})          \r\n\r\n        break;\r\n        }\r\n    \r\n    },\r\n\r\n  update: async (resource, params) =>{\r\n    switch (resource){\r\n      case \"reviews\":\r\n            const reqBody={\r\n              review_id:params.params_id,\r\n              company_id:params.company_id, \r\n              date: params.date,\r\n              role: params.role,\r\n              profRating: params.profRating, \r\n              worthWhileRating: params.worthWhileRating, \r\n              rateofPay: params.rateofPay,  \r\n              comment:params.comment\r\n            }\r\n            const config ={\r\n              headers:{\r\n                'content-type': 'application/x-www-form-urlencoded'\r\n              }\r\n            }\r\n            await axios.put(`/api/${resource}/review/${params.id}`,qs.stringify(reqBody),config).then(({ json }) => ({ data: json }))\r\n        break;\r\n      case \"companies\":\r\n\r\n    }\r\n  },\r\n\r\n\r\n  \r\n\r\n  delete: (resource, params) =>{\r\n    console.log(\"Trying to delete\",params)\r\n    alert(\"Deleting\")\r\n  return(\r\n  httpClient(`/api/reviews/review/${params.id}`, {\r\n      method: 'DELETE',\r\n  }).then(({ json }) => ({ data: json }))\r\n  )},\r\n\r\n  deleteMany: (resource, params) => {\r\n      console.log(params)\r\n      const query = {\r\n          filter: JSON.stringify({ id: params.ids}),\r\n          \r\n      };\r\n      return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\r\n          method: 'DELETE',\r\n          body: JSON.stringify(params.data),\r\n      }).then(({ json }) => ({ data: json }));\r\n    },\r\n\r\n\r\n\r\n\r\n};\r\n\r\n  // export const findOneReview = async (id)=>{\r\n  //   const reviews = await axios.get(`/api/reviews/${id}`)\r\n  //   return (reviews.data);\r\n  // }\r\n  \r\n\r\n\r\n\r\n\r\n    // getManyReference: (resource, params) => {\r\n    //     const { page, perPage } = params.pagination;\r\n    //     const { field, order } = params.sort;\r\n    //     const query = {\r\n    //         sort: JSON.stringify([field, order]),\r\n    //         range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\r\n    //         filter: JSON.stringify({\r\n    //             ...params.filter,\r\n    //             [params.target]: params.id,\r\n    //         }),\r\n    //     };\r\n    //     const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n\r\n    //     return httpClient(url).then(({ headers, json }) => ({\r\n    //         data: json,\r\n    //         total: parseInt(headers.get('content-range').split('/').pop(), 10),\r\n    //     }));\r\n    // },\r\n\r\n\r\n\r\n    // updateMany: (resource, params) => {\r\n    //     const query = {\r\n    //         filter: JSON.stringify({ id: params.ids}),\r\n    //     };\r\n    //     return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\r\n    //         method: 'PUT',\r\n    //         body: JSON.stringify(params.data),\r\n    //     }).then(({ json }) => ({ data: json }));\r\n    // },\r\n\r\n \r\n \r\n\r\n    \r\n\r\n  \r\nexport const listReviews = async () =>{\r\n  const reviews= await axios.get('/api/reviews',);\r\n  return(reviews.data) \r\n}\r\n\r\nexport const createReview = review =>{\r\n  console.log(review);\r\n  const reqBody = {\r\n    review_id:review.review_id,\r\n    user_id: review.user_id,\r\n    company_id:review.company_id, \r\n    date: review.date,\r\n    role: review.role,\r\n    profRating: review.profRating, \r\n    worthWhileRating: review.worthWhileRating, \r\n    rateofPay: review.rateofPay,  \r\n    comment:review.comment\r\n  }\r\n  const config ={\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios\r\n  .post('/api/reviews/add',qs.stringify(reqBody),config)\r\n  .then(res => {\r\n    console.log(\"Trying to add review... \")\r\n    return(res)\r\n  })\r\n  .catch(err=> {\r\n    console.log(err)    \r\n    return(\"There was a problem\")\r\n    })\r\n\r\n}\r\n\r\nexport const findOneReview = async (id)=>{\r\n  const reviews = await axios.get(`/api/reviews/${id}`)\r\n  return (reviews.data);\r\n}\r\n\r\n\r\n\r\nexport const deleteReview = review =>{\r\n  console.log(review);\r\n  const reqBody = {\r\n    user_id: review.user_id,\r\n    review_id: review.review_id\r\n  }\r\n  const config ={\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  \r\n  return axios\r\n  .post('/api/reviews/delete',qs.stringify(reqBody),config)\r\n  .then(res => {\r\n    console.log(res)\r\n    console.log(\"Review Delete\")\r\n    return(res.data)\r\n  })\r\n\r\n}\r\nexport const editReview = review =>{\r\n  //check to see if role is a number, find in array and get value and pass it.\r\n  if (isNaN(review.role)){\r\n    const ROLES=[\"Actor\",\"Designer\",\"Director\",\"Production\"]\r\n    const givenRoleValue=ROLES.indexOf(review.role)\r\n    review.role=givenRoleValue\r\n  }\r\n\r\n  const reqBody = {\r\n    review_id:review.review_id,\r\n    company_id:review.company_id, \r\n    date: review.date,\r\n    role: review.role,\r\n    profRating: review.profRating, \r\n    worthWhileRating: review.worthWhileRating, \r\n    rateofPay: review.rateofPay,  \r\n    comment:review.comment\r\n  }\r\n  const config ={\r\n    headers:{\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  }\r\n  return axios.put('/api/reviews/update',qs.stringify(reqBody),config)\r\n  .then(res => {\r\n    console.log(res)\r\n    return(res.data)\r\n  });\r\n}","import React, {useEffect,useState,useContext} from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Admin,Resource,ListGuesser,EditGuesser} from 'react-admin';\r\nimport {ReviewList} from '../components/admin/reviews'\r\nimport {CompanyList} from '../components/admin/companies.js'\r\nimport {ReviewEdit} from '../components/admin/reviewedit'\r\nimport {CompanyEdit} from '../components/admin/companyedit'\r\nimport {CompanyCreate} from '../components/admin/companycreate'\r\nimport dataprovider from '../dataprovider/dataprovider'\r\nimport {AuthContext} from '../utils/AuthContext';\r\n\r\n\r\n\r\n\r\nconst AdminPage =()=>{\r\n  const [loaded,setLoaded] = useState(false)\r\n  const [state,setState]=useContext(AuthContext)\r\n\r\n  const dataProvider = dataprovider\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {(!state.loggedIn ? \"Not Logged in\": \"Logged in\")}\r\n    \r\n      <Admin dataProvider={dataProvider}>\r\n        <Resource name=\"reviews\" list={ReviewList} edit={ReviewEdit}/>\r\n        <Resource name=\"companies\" list={CompanyList} edit={CompanyEdit} create={CompanyCreate}/>\r\n\r\n      </Admin>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminPage","import React,{useState,useContext,useEffect} from 'react'\r\nimport useForm from 'react-hook-form'\r\nimport moment from 'moment';\r\nimport {AuthContext} from '../utils/AuthContext'\r\nimport {addRepResponse} from './UserFunctions'\r\nimport LinkButton from \"./utilcomponents/LinkButton\"\r\nimport {Container,Row,Form,Col,Spinner,Button,Card} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom';\r\nimport {MessageContext} from '../utils/MessageContext'\r\nimport ReviewDetail from './ReviewDetail'\r\nconst token = localStorage.getItem('userToken')\r\n\r\n  const AddRepResponse = ({review,companies}) => {          \r\n    const {register,handleSubmit} = useForm();\r\n    const [state,setState]= useContext(AuthContext)\r\n    const [message,setMessage]=useContext(MessageContext)\r\n    const [edited,setEdited]=useState(false)\r\n    let m = moment();\r\n    const MYSQLDate = m.format('YYYY-MM-DD HH:mm:ss');\r\n    const numbers = [1, 2, 3, 4, 5];\r\n    const ROLES=[\"Actor\",\"Designer\",\"Director\",\"Production\"]\r\n    const givenRoleValue=ROLES.indexOf(review.role)\r\n\r\n\r\n    const reviewHandler=() => { \r\n      \r\n      //need to make this editResponse\r\n      addRepResponse(review).then(res => {\r\n        console.log(\"Here is the res : \",res)\r\n        setMessage(message => ({ ...message, alert: 'Response Added!',type:\"success\" }))\r\n        setEdited(true)\r\n        \r\n        })  \r\n      } \r\n\r\n  if (edited === true){\r\n    return(\r\n    <Redirect to ={`/`}></Redirect>\r\n    )}\r\n\r\n\r\n  \r\n  return(\r\n      <React.Fragment>\r\n      {/* Need to make this if company.user_id =! user_id */}\r\n      {/* {state.id != review.user_id && <Redirect to=\"/profile\"/>} */}\r\n      {/* Review Details */}\r\n      <Container className=\"text-center p-5\">\r\n       <ReviewDetail review={review}/>\r\n      </Container>\r\n      <Container>\r\n        <Card className=\"card mx-auto mt-2\" style={{width: 400}}>\r\n        <Card.Header>\r\n        <Row>\r\n          <Container className=\"text-center\">\r\n            <h6>Your Current Response</h6>          \r\n            </Container>        \r\n        </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <p>{review.response ? review.response : \"You currently have not responded to this review\"}</p>\r\n        </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      \r\n      {/* Add Response Form */}      \r\n        <Container className=\"text-center p-5\">\r\n          <Form onSubmit={handleSubmit(reviewHandler)} className=\"form-horizontal\">\r\n            <Form.Group controlId=\"formEditReview\">\r\n              {/* <!-- Comments --> */}\r\n              <Form.Group>\r\n                <Form.Label className=\"col-md-4 control-label\" for=\"input\">Add your response to the review here:</Form.Label>  \r\n                  <Col className=\"col-md-4 mx-auto\">\r\n                <Form.Control \r\n                      id=\"inputComment\"\r\n                      name=\"Comment\"\r\n                      as=\"textarea\" \r\n                      className = \"form-control input-md\" \r\n                      onChange={(event)=>(review['response']=event.target.value)}\r\n                      ref={register}\r\n                      />\r\n                </Col>\r\n              </Form.Group>\r\n              \r\n               \r\n          </Form.Group>\r\n          <Col className=\"col-md-4 mx-auto\">\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n                </Col>\r\n                <LinkButton to=\"/profile\" class=\"btn btn-primary m-2\">Back To List</LinkButton>    \r\n        </Form>\r\n          \r\n           </Container>\r\n    </React.Fragment>\r\n  \r\n  )\r\n}\r\n\r\n\r\nexport default AddRepResponse","import React, {useState, useEffect,useContext} from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport AddRep from '../components/AddRepResponse';\r\nimport {AuthContext} from '../utils/AuthContext';\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst RepPage =({match}) => {\r\n  const id = match.params.id\r\n  const [reviewInfo,setReviewInfo] =useState({});\r\n  const [isLoaded,setIsLoaded]=useState(false)\r\n  const [state,setState]=useContext(AuthContext)\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      const result = await fetch(`/api/reviews/review/${id}`)\r\n      const body = await result.json();\r\n      setReviewInfo(body.data)\r\n         \r\n    }\r\n    if(isLoaded===false){ \r\n      fetchData();\r\n      setIsLoaded(true)\r\n    }\r\n  },[isLoaded]) \r\n const review = reviewInfo\r\n    return(\r\n      \r\n    <React.Fragment>\r\n        {(!state.loggedIn ? <Redirect to = \"/login\"/> :null)}\r\n        {!isLoaded ? <Spinner animation=\"grow\"/>\r\n        :\r\n        <AddRep review = {review}/>\r\n        }      \r\n    </React.Fragment>\r\n\r\n    );\r\n  }\r\n\r\nexport default RepPage","import React,{useEffect,useState,useContext} from 'react';\r\nimport useForm from 'react-hook-form'\r\nimport {Container,Row,Col,Form,Alert,Button} from 'react-bootstrap'\r\nimport {Link,Redirect} from 'react-router-dom'\r\nimport {MessageContext} from '../utils/MessageContext';\r\nimport {submitSubmission} from '../components/UserFunctions'\r\nconst ForCompany =() => {\r\n\r\nconst {register, handleSubmit} = useForm()\r\nconst [email,setEmail]=useState();\r\nconst [comment,setComment]=useState();\r\nconst [errors,setErrors]=useState();\r\nconst [message,setMessage] = useContext(MessageContext)\r\nconst [isSent,setIsSent] = useState(false)\r\n\r\n\r\nconst repEmailHandler = () =>{\r\n  const submission ={\r\n    email: email,\r\n    comment:comment\r\n  }\r\n\r\n  \r\n\r\n  submitSubmission(submission).then(res => {\r\n    console.log(res)\r\n    if(res ===\"There was a problem\"){ \r\n      setErrors(\"Hmm...you want to try that again?\")\r\n   }else{\r\n    setMessage(message => ({ ...message, alert: 'Submission Sent!',type:\"success\" }))\r\n    console.log(\"Hitting this\")\r\n    setIsSent(true)\r\n  }\r\n    \r\n    \r\n  })  \r\n}\r\n\r\nif(isSent !== false){\r\n  return(\r\n    <Redirect to ={`/`}></Redirect>\r\n\r\n  )\r\n}\r\n\r\nreturn(\r\n  <React.Fragment>\r\n  <Container className=\"p-5\">\r\n    <Row>\r\n      <Col sm={12} md={6} ClassName=\"pb-5\">\r\n        <Form \r\n        onSubmit={handleSubmit(repEmailHandler)}>\r\n          <Form.Group controlId=\"repEmailForm\">\r\n            <Form.Label> <h3>Theater Representative Application</h3></Form.Label>\r\n            <Form.Control\r\n            required \r\n            type=\"email\" \r\n            placeholder=\"Your email\"\r\n            value={email}\r\n            onChange={\r\n              (event)=> setEmail(event.target.value)\r\n            }/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n            required \r\n            type=\"textarea\" \r\n            placeholder=\"The company you will be representing\"\r\n            value={comment}\r\n            onChange={\r\n              (event)=>setComment(event.target.value)\r\n            }\r\n            />\r\n          </Form.Group>\r\n            <Form.Group>\r\n              <Form.Check required\r\n              type=\"checkbox\" \r\n              label=\"I have read the rules and information about the Theater Representative\"/>\r\n            </Form.Group>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-md-4 control-label\" for=\"btnSubmit\"></label>\r\n                <div className=\"col-md-4 mx-auto\">\r\n                <Button className=\"primary\"type = \"submit\">Submit</Button>\r\n                  {/* <button onClick={()=>addReview()}>Submit</button> */}\r\n                </div>\r\n                {errors &&\r\n                  <Alert variant=\"danger\">Hmm...there was a problem....Please refresh and try again</Alert>}\r\n            </div>\r\n        </Form>\r\n      </Col>\r\n      <Col sm={6}>\r\n        <p>We've heard from Theater Companies around Chicago that they want the ability to address concerns that are \r\n        presented in the reviews posted at FourthWall. </p>\r\n        <br/>\r\n        <p> To be considered for this program you must have/agree to the following</p> \r\n        <ul>\r\n          <li>Understand that you will only be able to reply to the review publically without contacting the reviewer</li>\r\n          <li>Must have an email address that has the theater that you are representing in it. (For Example: info@Fourthwall.com)</li>\r\n          <li>Understand that reviewers can choose whether or not you can respond to their review. </li> \r\n        </ul>\r\n        \r\n        <p>If you are a Theater and want to try out the Representative Program, please fill out the form and I will get back to you.</p>\r\n      </Col>\r\n    </Row>\r\n    \r\n  </Container>\r\n  \r\n\r\n\r\n  </React.Fragment>\r\n\r\n)}\r\nexport default ForCompany","import React,{useContext,useState,useEffect} from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\nimport {MessageContext} from '../../utils/MessageContext'\r\n\r\nconst FlashMessage = () => {\r\n  const [message,setMessage] = useContext(MessageContext);\r\n  const [show,setShow] = useState(false)\r\n  const [isLoading,setIsLoading]=useState(true)\r\n\r\n  useEffect(() =>{\r\n    //making show false at load\r\n    if(isLoading === true){\r\n      setIsLoading(false)\r\n    } else{      //Component Loaded\r\n//check to see if there is a message\r\n      if(message.alert){\r\n        //check to see if show is true,if false set to true\r\n          if(show===false){\r\n            setShow(true)\r\n          }else{\r\n            const showTimer = setTimeout(()=>{\r\n              setMessage({alert:null})\r\n            },3000);\r\n            return () =>clearTimeout(showTimer) \r\n          }     \r\n      }else{\r\n        setShow(false)\r\n      }  \r\n    }\r\n  },[message.alert,isLoading,show])\r\n \r\n    if (show===true){\r\n      return(\r\n        <>\r\n          <Alert id=\"alertbox\" variant={message.type}>\r\n            <Alert.Heading>{message.alert}</Alert.Heading>\r\n          </Alert>\r\n        \r\n        </>\r\n        )\r\n\r\n    }else {\r\n      return null\r\n    }\r\n   \r\n    \r\n    \r\n  \r\n  \r\n};\r\n\r\nexport default FlashMessage","import React,{useContext} from 'react';\nimport Homepage from './pages/HomePage';\nimport AddCompany from './pages/AddCompany';\nimport CompanyListPage from './pages/CompanyListPage';\nimport AddReview from './pages/AddReviewPage';\nimport CompanyDetail from './pages/CompanyDetailPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Register from './pages/UserCreate';\nimport Login from './pages/LoginUser';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/js/bootstrap.js'\nimport {BrowserRouter as Router,\n      Route,Switch} from 'react-router-dom'\nimport NavBar from './NavBar';\nimport DetailReviewPage from './pages/DetailReviewPage';\nimport {AuthContextProvider} from './utils/AuthContext.js';\nimport {ReviewProvider} from './utils/ReviewContext';\nimport EditReviewPage from './pages/EditReviewPage';\nimport ProfilePage from './pages/ProfilePage'\nimport ResetPage from './pages/ResetPage'\nimport ResetfromEmail from './pages/ResetViaEmailPage'\nimport DeleteReview from './pages/DeleteReviewPage'\nimport AdminPage from './pages/AdminPage'\nimport RepPage from './pages/RepPage'\nimport ForCompany from './pages/ForCompanypage'\nimport {MessageProvider} from './utils/MessageContext'\n\nimport FlashMessage from './components/utilcomponents/FlashMessage'\n\n\n\n\nfunction App() {\n\n  \n\n  return (\n    <>\n\n  <MessageProvider>\n  <ReviewProvider>\n    <AuthContextProvider>\n      <Router>\n      <div className=\"App\">\n        <NavBar/>\n          <FlashMessage/>\n        \n        \n           \n      <Switch>\n        <Route path =\"/\" component= {Homepage} exact/>\n        <Route path =\"/forcompanies\" component = {ForCompany}/>\n\n        <Route path =\"/Profile\" component={ProfilePage}/> \n        <Route path =\"/Reset\" component={ResetPage} exact/>  \n        <Route path = \"/AddReview/:theaterId\" component = {AddReview}/>\n        <Route path = \"/AddReview/\" component = {AddReview}/>\n        <Route path =\"/admin\" component ={AdminPage}/>       \n        <Route path = \"/review/edit/:id\" component ={EditReviewPage}/>\n        <Route path = \"/review/delete/:id\" component ={DeleteReview}/>\n        <Route path = \"/review/edit/:id\" component ={EditReviewPage}/>\n        <Route path = \"/review/:id\" component = {DetailReviewPage}/>\n        <Route path = \"/AddCompany\" component = {AddCompany}/>\n        <Route path = \"/Register\" component ={Register}/>\n        <Route path = \"/Login\" component ={Login}/>\n        <Route path = \"/companies/:id\" component ={CompanyDetail}/>\n        <Route path = \"/companies\" component = {CompanyListPage}/> \n        <Route path = \"/rep/:id\" component = {RepPage}/>\n\n\n\n        <Route path = \"/reset/:token\" component = {ResetfromEmail}/>\n        \n        <Route component={NotFoundPage} />\n      </Switch>\n      \n        \n      </div>\n      </Router>\n    </AuthContextProvider>\n    </ReviewProvider>\n  </MessageProvider> \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nconst AppWrapper = () => {\n  return (\n      <App/>\n  )\n}\nReactDOM.render(<AppWrapper/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}